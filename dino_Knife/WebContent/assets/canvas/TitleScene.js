

// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * TitleScene.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function TitleScene(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _posTitleShodow = this.game.add.group(this);
	_posTitleShodow.position.setTo(92, 85);
	
	var _posTitle = this.game.add.group(this);
	_posTitle.position.setTo(84, 75);
	
	var _leafContainer = this.game.add.group(this);
	
	var _dinoContanier = this.game.add.group(this);
	_dinoContanier.position.setTo(355, 430);
	
	var _auha_right_arm_png = this.game.add.sprite(-35, 17, 'dinoAtlas', 'auha_right_arm.png', _dinoContanier);
	_auha_right_arm_png.scale.setTo(0.9, -0.9);
	_auha_right_arm_png.anchor.setTo(0.5, 0.5);
	
	var _auha_left_arm_png = this.game.add.sprite(35, 17, 'dinoAtlas', 'auha_left_arm.png', _dinoContanier);
	_auha_left_arm_png.scale.setTo(0.9, -0.9);
	_auha_left_arm_png.anchor.setTo(0.5, 0.5);
	
	var _auha_body_png = this.game.add.sprite(0, 0, 'dinoAtlas', 'auha_body.png', _dinoContanier);
	_auha_body_png.scale.setTo(0.9, 0.9);
	_auha_body_png.anchor.setTo(0.5, 0.5);
	
	var _auha_eyeball_png = this.game.add.sprite(-1, -27, 'dinoAtlas', 'auha_eyeball.png', _dinoContanier);
	_auha_eyeball_png.scale.setTo(0.9, 0.9);
	_auha_eyeball_png.anchor.setTo(0.5, 0.5);
	
	var _notDisappearContainer = this.game.add.group(this);
	
	var _targetContainer = this.game.add.group(_notDisappearContainer);
	
	var _disappearContainer = this.game.add.group(this);
	
	var _playButtonContainer = this.game.add.group(_disappearContainer);
	_playButtonContainer.position.setTo(363, 863);
	
	var _play_btn_shadow_png = this.game.add.sprite(6, 9, 'mainAtlas', 'play_btn_shadow.png', _playButtonContainer);
	_play_btn_shadow_png.anchor.setTo(0.5, 0.5);
	
	var _btnLobby = this.game.add.sprite(0, 0, 'mainAtlas', 'play_btn.png', _playButtonContainer);
	_btnLobby.anchor.setTo(0.5, 0.5);
	_btnLobby.tint = 0xfca100;
	
	var _play_btn_icon_png = this.game.add.sprite(12, 0, 'mainAtlas', 'play_btn_icon.png', _playButtonContainer);
	_play_btn_icon_png.anchor.setTo(0.5, 0.5);
	
	var _inviteContainer = this.game.add.group(_disappearContainer);
	_inviteContainer.position.setTo(361, 1070);
	
	var _btnInvite = this.game.add.sprite(0, 0, 'mainAtlas', 'invite_btn.png', _inviteContainer);
	_btnInvite.scale.setTo(0.88, 0.88);
	_btnInvite.anchor.setTo(0.5, 0.5);
	
	var _friendsContainer = this.game.add.group(_disappearContainer);
	_friendsContainer.position.setTo(19, -16);
	
	var _boder_line_590px_png = this.game.add.sprite(481, 1181, 'mainAtlas', 'boder_line_590px.png', _friendsContainer);
	_boder_line_590px_png.angle = 90.0;
	_boder_line_590px_png.scale.setTo(13.0, 2.0);
	_boder_line_590px_png.tint = 0x0080ff;
	
	var _boder_line_590px_png1 = this.game.add.sprite(245, 1181, 'mainAtlas', 'boder_line_590px.png', _friendsContainer);
	_boder_line_590px_png1.angle = 90.0;
	_boder_line_590px_png1.scale.setTo(13.0, 2.0);
	_boder_line_590px_png1.tint = 0x0080ff;
	
	var _profileGroup1 = new ProfileInfo(this.game, _friendsContainer);
	_profileGroup1.position.setTo(57, 1204);
	
	var _profileGroup2 = new ProfileInfo(this.game, _friendsContainer);
	_profileGroup2.position.setTo(292, 1204);
	
	var _profileGroup3 = new ProfileInfo(this.game, _friendsContainer);
	_profileGroup3.position.setTo(529, 1204);
	
	var _textJoin = this.game.add.text(360, 1187, '', {"font":"38px Lilita One","align":"center"}, _disappearContainer);
	_textJoin.anchor.setTo(0.5, 0.5);
	
	var _upDisappearContainer = this.game.add.group(this);
	
	
	
	// public fields
	
	this.fLeafContainer = _leafContainer;
	this.fDinoContanier = _dinoContanier;
	this.fNotDisappearContainer = _notDisappearContainer;
	this.fTargetContainer = _targetContainer;
	this.fDisappearContainer = _disappearContainer;
	this.fBtnLobby = _btnLobby;
	this.fInviteContainer = _inviteContainer;
	this.fBtnInvite = _btnInvite;
	this.fFriendsContainer = _friendsContainer;
	this.fProfileGroup1 = _profileGroup1;
	this.fProfileGroup2 = _profileGroup2;
	this.fProfileGroup3 = _profileGroup3;
	this.fTextJoin = _textJoin;
	this.fUpDisappearContainer = _upDisappearContainer;
	/* --- post-init-begin --- */
	//text UI
	{
		var posFontStyle = {fontSize: '148px', fill: '#002a49', font: 'Lilita One', "align":"center"};
		
		_textTitleShodow = this.game.add.text(_posTitleShodow.x, _posTitleShodow.y, 'DINO\nTHORNZ', posFontStyle, this.fUpDisappearContainer);
		_textTitleShodow.lineSpacing = -50;
		_textTitleShodow.alpha = 0.2;

		_textTitle = this.game.add.text(_posTitle.x, _posTitle.y, 'DINO\nTHORNZ', posFontStyle, this.fUpDisappearContainer);
		_textTitle.fill = "#ffffff";
		_textTitle.lineSpacing = -50;

		var inviteFontStyle = {fontSize: '36px', fill: '#ffffff', font: 'Lilita One'};

		_textInviteFriend = this.game.add.text(0, 5, StzTrans.translate(ELocale.INVITE_FRIEND_TEXT_B), inviteFontStyle, this.fInviteContainer);
		_textInviteFriend.anchor.set(0.5);
		
		_textJoin.fill = '#0091c4';
		_textJoin.text = StzTrans.translate(ELocale.CHAR_ROOM);
	}

	//btnLobby
	this.fBtnLobby.inputEnabled = true;
	this.fBtnLobby.events.onInputUp.add(function(){
		window.sounds.sound('sfx_button').play();
		this.game.input.enabled = false;
		if(this.fDinoContanier.visible === true){
			this.game.add.tween(this.fDinoContanier).to({y:this.game.world.centerY - 100}, 500, Phaser.Easing.Exponential.In, true)
			.onComplete.addOnce(function(){
				this.fDinoContanier.visible = false;
				this.game.state.getCurrentState().switchLobbyAnimation();
			}.bind(this));
		}
	}.bind(this));
	
	this.fDinoContanier.visible = false;
	
	//타이틀 친구 프로필
	{
		this.fFriendsContainer.visible = true;
		this.fTextJoin.visible = false;
		
		this.visible = false;
		var imageDataArray = [];
		
		var tempFriendArray = PlayerDataManager.getContextFriends();
		if(tempFriendArray && tempFriendArray.length > 0){
			var divedValue = Math.floor(tempFriendArray.length/3);
			var friendArray = [];
			
			friendArray.push(tempFriendArray[StzUtil.createRandomInteger(0, divedValue-1)]);
			friendArray.push(tempFriendArray[StzUtil.createRandomInteger(divedValue, divedValue*2 - 1)]);
			friendArray.push(tempFriendArray[StzUtil.createRandomInteger(divedValue*2, tempFriendArray.length-1)]);
			
			for(var i = 0; i < friendArray.length; i++){
				imageDataArray.push({key : friendArray[i].profileInfo.getImageKey(), url : friendArray[i].profileInfo.getPhotoUrl()});
			}
			
			StzUtil.loadImagesFromURL(this.game, imageDataArray, function(inKeyArray){
				this.fProfileGroup1.setData(friendArray[0]);
				this.fProfileGroup2.setData(friendArray[1]);
				this.fProfileGroup3.setData(friendArray[2]);
				this.visible = true;
			}, this);
		}
		else{
			this.fFriendsContainer.visible = false;
			this.fTextJoin.visible = true;
			this.visible = true;
		}
	}

	this.fBtnInvite.inputEnabled = true;
	this.fBtnInvite.events.onInputUp.add(function(){
		window.sounds.sound('sfx_button').play();
		chageContext.call(this);
	}.bind(this));
	
	this.fTextJoin.inputEnabled = true;
	this.fTextJoin.events.onInputUp.add(function(){
		window.sounds.sound('sfx_button').play();
		chageContext.call(this);
	}.bind(this));
	
	function chageContext(){
		FbManager.inviteFriend(function(){
			this.game.state.restart(true, false, ESceneState.GO_TITLE_SCENE);
		}.bind(this), null, this);
	}
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var TitleScene_proto = Object.create(Phaser.Group.prototype);
TitleScene.prototype = TitleScene_proto;
TitleScene.prototype.constructor = TitleScene;

/* --- end generated code --- */
// -- user code here --
TitleScene.prototype.createLeafEmitter = function(){
	this.fDinoContanier.visible = true;
	
	var leftEmitter = this.game.add.emitter(this.game.world.centerX, this.game.world.centerY - 100 , 10);
	leftEmitter.width = this.game.world.width/1.5;
	leftEmitter.makeParticles('mainAtlas', ['leaf01.png', 'leaf02.png']);
	leftEmitter.minParticleScale = 0.5;
	leftEmitter.maxParticleScale = 1;
	
	leftEmitter.setYSpeed(-50, -50);
	leftEmitter.setXSpeed(-30, 30);
	leftEmitter.setAlpha(1, 0, 8000);
	leftEmitter.gravity = 0;

	for(var i = 0; i < leftEmitter.children.length; i++){
		leftEmitter.children[i].tint = (leftEmitter.children[i].frameName === 'leaf01.png')? 0xedff43 : 0xaee80f;
	}
	leftEmitter.start(false, 3000, 500, 0);
	
	this.fLeafContainer.add(leftEmitter);
};

TitleScene.prototype.switchLobbyAnimation = function(inProgressCallback, inCompleteCallback){
	if(this.fLeafContainer.children[0]){
		this.fLeafContainer.children[0].destroy();
	}
	this.fLeafContainer.visible = false;
	
	this.game.add.tween(this.fDisappearContainer).to({alpha:0}, 300, Phaser.Easing.Linear.None, true)
	.onComplete.addOnce(function(){
		this.fLeafContainer.destroy();
		this.fLeafContainer = null;
		this.fDisappearContainer.visible = false;
		if(inProgressCallback){
			inProgressCallback();
		}
	}.bind(this));
	
	var moveY = -400;
	this.game.add.tween(this.fUpDisappearContainer).to({y:moveY}, 1000, Phaser.Easing.Linear.None, true)
	.onComplete.addOnce(function(){
		this.fUpDisappearContainer.visible = false;
		if(inCompleteCallback){
			inCompleteCallback();
		}
	}.bind(this));
};