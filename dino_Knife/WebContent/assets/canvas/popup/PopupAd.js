
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * PopupAd.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function PopupAd(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _blindContainer = this.game.add.group(this);
	
	var _popupBg = new PopupBg(this.game, this);
	_popupBg.position.setTo(360, 658);
	
	var _textDec = this.game.add.text(357, 613, 'DO YOU WANT\nSKIP STAGE?', {"font":"bold 44px Lilita One","fill":"#a3c6d3","align":"center"}, this);
	_textDec.anchor.setTo(0.5, 0.5);
	
	var _ad_icon_large_png = this.game.add.sprite(257, 356, 'mainAtlas', 'ad_icon_large.png', this);
	_ad_icon_large_png.angle = -20.0;
	_ad_icon_large_png.tint = 0xc1d9e0;
	
	var _videoButtonContainer = this.game.add.group(this);
	
	var _btnVideo = this.game.add.sprite(362, 835, 'mainAtlas', 'common_middle_btn.png', _videoButtonContainer);
	_btnVideo.scale.setTo(1.0, 1.1);
	_btnVideo.anchor.setTo(0.5, 0.5);
	_btnVideo.tint = 0x51aaee;
	
	var _textAd = this.game.add.text(410, 838, 'WATCH AD', {"font":"bold 57px Lilita One","fill":"#ffffff"}, _videoButtonContainer);
	_textAd.anchor.setTo(0.5, 0.5);
	
	var _ad_icon_skip_btn_png = this.game.add.sprite(212, 835, 'mainAtlas', 'ad_icon_skip_btn.png', _videoButtonContainer);
	_ad_icon_skip_btn_png.anchor.setTo(0.5, 0.5);
	
	var _buyButtonContainer = this.game.add.group(this);
	
	var _btnBuy = this.game.add.sprite(362, 1014, 'mainAtlas', 'common_middle_btn.png', _buyButtonContainer);
	_btnBuy.scale.setTo(1.0, 1.1);
	_btnBuy.anchor.setTo(0.5, 0.5);
	_btnBuy.tint = 0xf4ba00;
	
	var _iconCoin = this.game.add.sprite(251, 986, 'mainAtlas', 'common_coin.png', _buyButtonContainer);
	_iconCoin.scale.setTo(0.5, 0.5);
	
	var _textBuyValue = this.game.add.text(387, 1016, '50', {"font":"bold 60px Lilita One","fill":"#ffffff"}, _buyButtonContainer);
	_textBuyValue.anchor.setTo(0.5, 0.5);
	
	
	
	// public fields
	
	this.fBlindContainer = _blindContainer;
	this.fPopupBg = _popupBg;
	this.fTextDec = _textDec;
	this.fVideoButtonContainer = _videoButtonContainer;
	this.fBtnVideo = _btnVideo;
	this.fTextAd = _textAd;
	this.fBuyButtonContainer = _buyButtonContainer;
	this.fBtnBuy = _btnBuy;
	this.fIconCoin = _iconCoin;
	this.fTextBuyValue = _textBuyValue;
	/* --- post-init-begin --- */
	this.failPopup = new PopupError(this.game, this);;
	this.fTextAd.text = StzTrans.translate(ELocale.CHARACTER_AD_BUTTON);
	//skipAdd
	{
		
	}
	this.fBtnVideo.inputEnabled = true
	this.fBtnVideo.events.onInputUp.add(function(){
		window.sounds.sound('sfx_button').play();
		if(this.adModel){
			this.game.state.getCurrentState().toggleLoading(true, 10, function(){
				//광고 로딩 타임아웃 실패
				this.game.state.getCurrentState().toggleLoading(false);
				this.failPopup.setData(EErorrType.AD_LOAD_FAIL);
			}.bind(this));
			GGManager.show(this.adName);
		}
		else{
			this.game.state.getCurrentState().toggleLoading(true, 1, function(){
				//광고 로딩 타임아웃 실패
				this.game.state.getCurrentState().toggleLoading(false);
				this.failPopup.setData(EErorrType.AD_PC_FAIL);
			}.bind(this));
		}
	}.bind(this));
	
	this.fBtnBuy.inputEnabled = true;
	this.fBtnBuy.events.onInputUp.add(function(){
		window.sounds.sound('sfx_button').play();
		this.showAdComplteCallback();
		this.game.state.getCurrentState().offBlindFunc();
		
		var curCoin = PlayerDataManager.saveData.getCoin();
		PlayerDataManager.saveData.setCoin(curCoin - this.buyPrice);
		PopupBg.destroyAlphaTween(this.game, this);
	}.bind(this));
	
	this.visible = false;
	
	this.fPopupBg.setData("", function(){
		PopupBg.destroyAlphaTween(this.game, this, function(){
			if(this.closeCallback){
				this.closeCallback();
			}
		}.bind(this));
	}.bind(this));
	
	this.showAdComplteCallback = null;
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var PopupAd_proto = Object.create(Phaser.Group.prototype);
PopupAd.prototype = PopupAd_proto;
PopupAd.prototype.constructor = PopupAd;

/* --- end generated code --- */
// -- user code here --
EpopupAdType = {
		AD_POPUP_SKIP		: 	'ad_popup_skip',
		AD_POPUP_CONTINUE	:	'ad_popup_continue'
};

PopupAd.prototype.setData = function(type, inShowAdCompleteCallback, inCloseCallback){
	this.visible = true;
	this.showAdComplteCallback = inShowAdCompleteCallback;
	this.closeCallback = inCloseCallback;
	
	var txtDec = "";
	var txtTitle = "";
	this.adName = "";
	var staticNamePrice = "";
	if(type === EpopupAdType.AD_POPUP_SKIP){
		txtDec = StzTrans.translate(ELocale.SKIP_ITEM_DESC);
		txtTitle = StzTrans.translate(ELocale.SKIP_TEXT_B);
		this.adName = EAdName.REWARD_SKIP;
		staticNamePrice = 'skip_price';
	}
	else if(type === EpopupAdType.AD_POPUP_CONTINUE){
		txtDec = StzTrans.translate(ELocale.CONTINUE_DESC);
		txtTitle = StzTrans.translate(ELocale.CONTINUE_TEXT_B);
		this.adName = EAdName.REWARD_CONTINUE;
		staticNamePrice = 'continue_price';
	}
	
	this.fTextDec.text = txtDec;
	this.fPopupBg.fTextTitle.text = txtTitle;
	
	this.adModel = GGManager.getAdModelByPlacementID(EAdType.REWARDED, this.adName);
	
	if(this.adModel){
		GGManager.setCallbackByPlacementID(this.adName, function() {
			//showComplete
			this.game.state.getCurrentState().offBlindFunc();
			PopupBg.destroyAlphaTween(this.game, this, function(){
				if(this.showAdComplteCallback){
					this.showAdComplteCallback();
				}
			}.bind(this));
		}.bind(this), function(){
			//loadSuccse
			this.game.state.getCurrentState().toggleLoading(false);
		}.bind(this), function(){
			//loadFail
			this.game.state.getCurrentState().toggleLoading(false);
			this.failPopup.setData(EErorrType.AD_LOAD_FAIL);
		}.bind(this));
		GGManager.adLogSend(this.adModel.getType(), this.adModel.getName(), EAdUserAction.ACTION_SHOW);
	}
	
	this.buyPrice = StaticManager.dino_thornz_base.get(staticNamePrice) ? StaticManager.dino_thornz_base.get(staticNamePrice).value : 500;
	this.fTextBuyValue.text = this.buyPrice;
	
	if(PlayerDataManager.saveData.getCoin() < this.buyPrice){
		this.fBuyButtonContainer.alpha = 0.5;
		this.fBtnBuy.inputEnabled = false;
	}
	else{
		this.fBuyButtonContainer.alpha = 1;
		this.fBtnBuy.inputEnabled = true;
	}
};

PopupAd.prototype.superDestroy = PopupAd.prototype.destroy;
PopupAd.prototype.destroy = function(destroyChildren, soft) {
	this.superDestroy(destroyChildren, soft);
};