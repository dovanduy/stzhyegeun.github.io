
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * PopupShop.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function PopupShop(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _blindContainer = this.game.add.group(this);
	
	var _popupBg = new PopupBg(this.game, this);
	_popupBg.position.setTo(361, 661);
	
	var _claimButtonContainer = this.game.add.group(this);
	
	var _btnClaim = this.game.add.sprite(359, 1003, 'mainAtlas', 'common_middle_btn.png', _claimButtonContainer);
	_btnClaim.scale.setTo(1.0, 1.1);
	_btnClaim.anchor.setTo(0.5, 0.5);
	_btnClaim.tint = 0xf4ba00;
	
	var _textClaim = this.game.add.text(357, 1002, 'CLAIM', {"font":"bold 62px Lilita One","fill":"#ffffff","align":"center"}, _claimButtonContainer);
	_textClaim.anchor.setTo(0.5, 0.5);
	
	var _shareButtonContainer = this.game.add.group(this);
	
	var _btnShare = this.game.add.sprite(360, 1002, 'mainAtlas', 'common_middle_btn.png', _shareButtonContainer);
	_btnShare.scale.setTo(1.0, 1.1);
	_btnShare.anchor.setTo(0.5, 0.5);
	_btnShare.tint = 0x2a549e;
	
	var _textShare = this.game.add.text(363, 1002, 'Invite your friends', {"font":"bold 38px Lilita One","fill":"#ffffff"}, _shareButtonContainer);
	_textShare.anchor.setTo(0.5, 0.5);
	
	var _buyButtonContainer = this.game.add.group(this);
	
	var _btnBuy = this.game.add.sprite(360, 1002, 'mainAtlas', 'common_middle_btn.png', _buyButtonContainer);
	_btnBuy.scale.setTo(1.0, 1.1);
	_btnBuy.anchor.setTo(0.5, 0.5);
	_btnBuy.tint = 0xf4ba00;
	
	var _iconCoin = this.game.add.sprite(251, 974, 'mainAtlas', 'common_coin.png', _buyButtonContainer);
	_iconCoin.scale.setTo(0.5, 0.5);
	
	var _textBuyValue = this.game.add.text(387, 1002, '1000', {"font":"bold 60px Lilita One","fill":"#ffffff"}, _buyButtonContainer);
	_textBuyValue.anchor.setTo(0.5, 0.5);
	
	var _videoButtonContainer = this.game.add.group(this);
	
	var _btnVideo = this.game.add.sprite(359, 1003, 'mainAtlas', 'common_middle_btn.png', _videoButtonContainer);
	_btnVideo.scale.setTo(1.0, 1.1);
	_btnVideo.anchor.setTo(0.5, 0.5);
	_btnVideo.tint = 0x51aaee;
	
	var _textAd = this.game.add.text(410, 1004, 'WATCH AD', {"font":"bold 58px Lilita One","fill":"#ffffff"}, _videoButtonContainer);
	_textAd.anchor.setTo(0.5, 0.5);
	
	var _ad_icon_skip_btn_png = this.game.add.sprite(209, 1003, 'mainAtlas', 'ad_icon_skip_btn.png', _videoButtonContainer);
	_ad_icon_skip_btn_png.anchor.setTo(0.5, 0.5);
	
	var _circle_png = this.game.add.sprite(360, 529, 'mainAtlas', 'circle.png', this);
	_circle_png.scale.setTo(0.4, 0.4);
	_circle_png.alpha = 0.2;
	_circle_png.anchor.setTo(0.5, 0.5);
	_circle_png.tint = 0x00c0f4;
	
	var _iconCharacter = this.game.add.sprite(360, 489, 'characterAtlas', '9.png', this);
	_iconCharacter.scale.setTo(2.2, 2.2);
	_iconCharacter.anchor.setTo(0.5, 0.5);
	
	var _textDec = this.game.add.text(363, 780, 'BUY PINK CANDY\nON 1000', {"font":"42px Lilita One","fill":"#5d707c","align":"center"}, this);
	_textDec.anchor.setTo(0.5, 0.5);
	
	var _coinContainer = this.game.add.group(this);
	_coinContainer.position.setTo(256, 45);
	
	var _iconMainCoin = this.game.add.sprite(0, 0, 'mainAtlas', 'common_coin.png', _coinContainer);
	_iconMainCoin.scale.setTo(0.4, 0.4);
	
	
	
	// public fields
	
	this.fBlindContainer = _blindContainer;
	this.fPopupBg = _popupBg;
	this.fClaimButtonContainer = _claimButtonContainer;
	this.fBtnClaim = _btnClaim;
	this.fTextClaim = _textClaim;
	this.fShareButtonContainer = _shareButtonContainer;
	this.fBtnShare = _btnShare;
	this.fTextShare = _textShare;
	this.fBuyButtonContainer = _buyButtonContainer;
	this.fBtnBuy = _btnBuy;
	this.fIconCoin = _iconCoin;
	this.fTextBuyValue = _textBuyValue;
	this.fVideoButtonContainer = _videoButtonContainer;
	this.fBtnVideo = _btnVideo;
	this.fTextAd = _textAd;
	this.fIconCharacter = _iconCharacter;
	this.fTextDec = _textDec;
	this.fCoinContainer = _coinContainer;
	this.fIconMainCoin = _iconMainCoin;
	/* --- post-init-begin --- */
	this.failPopup = new PopupError(this.game, this);
	
	this.fPopupBg.setData(StzTrans.translate(ELocale.SHOP_TEXT_B), function(){
		this.game.state.getCurrentState().offBlindFunc();
		PopupBg.destroyAlphaTween(this.game, this);
		this.parent.setData();
	}.bind(this));
	
	this.fBtnBuy.inputEnabled = true;
	this.fBtnBuy.events.onInputUp.add(function(){
		window.sounds.sound('sfx_shop').play();
		FbManager.updateAsyncByInviteUpdateView(EShareType.CHARACTER, this.character);
		
		CharacterManager.buyCharacterByID(this.id);
		this.game.state.getCurrentState().offBlindFunc();
		PopupBg.destroyAlphaTween(this.game, this);
		CharacterManager.saveCharacterData();
		this.parent.setData();
	}.bind(this));
	
	this.fBtnShare.inputEnabled = true;
	this.fBtnShare.events.onInputUp.add(function(){
		window.sounds.sound('sfx_button').play();
		FbManager.inviteFriend(inviteCallback, inviteCallback, this);
	}.bind(this));
	
	function inviteCallback() {
		this.game.state.getCurrentState().offBlindFunc();
		
		if(this.character.unlockValue - PlayerDataManager.saveData.getShareCount() <= 0){
			PopupBg.destroyAlphaTween(this.game, this, function(){
				this.setData(EPopupShopType.CLAIM, this.character);
			}.bind(this));
		}
		else{
			PopupBg.destroyAlphaTween(this.game, this);
		}
	};
	
	this.fBtnClaim.inputEnabled = true;
	this.fBtnClaim.events.onInputUp.add(function(){
		window.sounds.sound('sfx_button').play();
		this.game.state.getCurrentState().offBlindFunc();
		PopupBg.destroyAlphaTween(this.game, this);
		CharacterManager.buyCharacterByID(this.character.id, true);
		this.parent.setData();
	}.bind(this));
	
	this.fBtnVideo.inputEnabled = true;
	this.fBtnVideo.events.onInputUp.add(function(){
		window.sounds.sound('sfx_button').play();
		if(this.adModel){
			this.game.state.getCurrentState().toggleLoading(true, 10, function(){
				//광고 로딩 타임아웃 실패
				this.game.state.getCurrentState().toggleLoading(false);
				this.failPopup.setData(EErorrType.AD_LOAD_FAIL);
			}.bind(this));
			GGManager.show(EAdName.REWARD_GET_CHARACTER);
		}
		else{
			//로컬 테스트
//			CharacterManager.updateCureValueById(this.character.id, 1);
//			if(this.character.unlockValue - this.character.curValue <= 0){
//				PopupBg.destroyAlphaTween(this.game, this, function(){
//					this.setData(EPopupShopType.CLAIM, this.character);
//				}.bind(this));
//			}
//			else{
//				PopupBg.destroyAlphaTween(this.game, this);
//			}
			this.game.state.getCurrentState().toggleLoading(true, 1, function(){
				//광고 로딩 타임아웃 실패
				this.game.state.getCurrentState().toggleLoading(false);
				this.failPopup.setData(EErorrType.AD_PC_FAIL);
			}.bind(this));
		}
	}.bind(this));
	
	var coinFontStyle = {fontSize: '54px', fill: '#ffffff', font: 'Lilita One', boundsAlignH: 'left', boundsAlignV: 'middle'};
	this.fTextCoin = this.game.add.text(0, -5, PlayerDataManager.saveData.getCoin(), coinFontStyle, this.fCoinContainer);
	this.fTextCoin.setTextBounds(this.fIconCoin.width*1.4, 0, this.game.width, this.fIconCoin.height);
	
	this.visible = false;
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var PopupShop_proto = Object.create(Phaser.Group.prototype);
PopupShop.prototype = PopupShop_proto;
PopupShop.prototype.constructor = PopupShop;

/* --- end generated code --- */
// -- user code here --
EPopupShopType = {
		BUY 		: "BUY",
		SHARE 		: "SHARE",
		VIDEO		: "VIDEO",
		CLAIM		: "CLAIM"
};

PopupShop.prototype.setData = function(type, inData){
	this.fBuyButtonContainer.visible = false;
	this.fShareButtonContainer.visible = false;
	this.fClaimButtonContainer.visible = false;
	this.fVideoButtonContainer.visible = false;
	
	this.character = inData;
	
	this.game.state.getCurrentState().showBlindFunc(this.fBlindContainer);
	if(type === EPopupShopType.BUY){
		this.fBuyButtonContainer.visible = true;
		
		this.fTextBuyValue.text = inData.unlockValue; 
		var textDec = StzUtil.strFormatObj(StzTrans.translate(ELocale.CHARACTER_BUY_TEXT), 
				{coin_num : inData.unlockValue, cash_type : 'COIN', character_name : inData.name});
		this.fTextDec.text = textDec;
		
		if(PlayerDataManager.saveData.getCoin() < inData.unlockValue){
			this.fBuyButtonContainer.alpha = 0.5;
			this.fBtnBuy.inputEnabled = false;
		}
		else{
			this.fBuyButtonContainer.alpha = 1;
			this.fBtnBuy.inputEnabled = true;
		}
	}
	else if(type === EPopupShopType.SHARE){
		this.fShareButtonContainer.visible = true;
		
		this.fTextShare.text = StzTrans.translate(ELocale.INVITE_FRIEND_TEXT_B);
		var textDec = StzUtil.strFormatObj(StzTrans.translate(ELocale.CHARACTER_INVITE_TEXT), 
				{N : inData.unlockValue - PlayerDataManager.saveData.getShareCount(), character_name : inData.name});
		this.fTextDec.text = textDec;
	}
	else if(type === EPopupShopType.CLAIM){
		this.fClaimButtonContainer.visible = true;
		this.fTextClaim.text= StzTrans.translate(ELocale.CLAIM_TEXT_B);
		this.fTextShare.text = StzTrans.translate(ELocale.INVITE_FRIEND_TEXT_B);
		var textDec = inData.name + StzUtil.strFormatObj(StzTrans.translate(ELocale.GET_CHARACTER_TEXT), 
				{character_name : inData.name});
		this.fTextDec.text = textDec;
	}
	else if(type === EPopupShopType.VIDEO){
		this.adModel = GGManager.getAdModelByPlacementID(EAdType.REWARDED, EAdName.REWARD_GET_CHARACTER);
		this.fVideoButtonContainer.visible = true;
		
		this.fTextAd.text = StzTrans.translate(ELocale.CHARACTER_AD_BUTTON);
		var textDec = StzUtil.strFormatObj(StzTrans.translate(ELocale.CHARACTER_AD_TEXT), 
				{N : inData.unlockValue - inData.curValue, character_name : inData.name});
		this.fTextDec.text = textDec;
		
		if(this.adModel){
			GGManager.setCallbackByPlacementID(EAdName.REWARD_GET_CHARACTER, function() {
				//showComplete
				CharacterManager.updateCureValueById(this.character.id, 1);
				CharacterManager.saveCharacterData();
				this.game.state.getCurrentState().offBlindFunc();
				if(this.character.unlockValue - this.character.curValue <= 0){
					PopupBg.destroyAlphaTween(this.game, this, function(){
						this.setData(EPopupShopType.CLAIM, this.character);
					}.bind(this));
				}
				else{
					PopupBg.destroyAlphaTween(this.game, this);
				}
			}.bind(this), function(){
				//loadSuccse
				this.game.state.getCurrentState().toggleLoading(false);
			}.bind(this), function(){
				//loadFail
				this.game.state.getCurrentState().toggleLoading(false);
				this.failPopup.setData(EErorrType.AD_LOAD_FAIL);
			}.bind(this));
			GGManager.adLogSend(this.adModel.getType(), this.adModel.getName(), EAdUserAction.ACTION_SHOW);
		}
	}
	this.id = inData.id;
	this.fIconCharacter.frameName = inData.id + '.png';
		
	this.visible = true;
	this.updateUI();
};

PopupShop.prototype.updateUI = function(){
	this.fCoinContainer.x = this.game.world.width/2 - this.fCoinContainer.width/2;
	this.fTextCoin.text = PlayerDataManager.saveData.getCoin();
};