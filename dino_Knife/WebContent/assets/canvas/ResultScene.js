
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * ResultScene.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function ResultScene(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _blindContainer = this.game.add.group(this);
	
	var _winContainer = this.game.add.group(this);
	
	var _rightRainbow = this.game.add.sprite(421, 571, 'mainAtlas', 'rainbow_clear.png', _winContainer);
	_rightRainbow.anchor.setTo(0.0, 0.5);
	
	var _leftRainbow = this.game.add.sprite(309, 565, 'mainAtlas', 'rainbow_clear.png', _winContainer);
	_leftRainbow.scale.setTo(-1.0, 1.0);
	_leftRainbow.anchor.setTo(0.0, 0.5);
	
	var _emitterContainer = this.game.add.group(_winContainer);
	
	var _auhaContainer = this.game.add.group(_winContainer);
	_auhaContainer.position.setTo(-96, 15);
	
	var _auha_left_arm_png = this.game.add.sprite(537, 330, 'dinoAtlas', 'auha_left_arm.png', _auhaContainer);
	_auha_left_arm_png.angle = 14.0;
	_auha_left_arm_png.scale.setTo(0.8, 0.8);
	
	var _auha_right_arm_png = this.game.add.sprite(469, 319, 'dinoAtlas', 'auha_right_arm.png', _auhaContainer);
	_auha_right_arm_png.angle = 14.0;
	_auha_right_arm_png.scale.setTo(0.8, 0.8);
	
	var _auha_body_png = this.game.add.sprite(485, 288, 'dinoAtlas', 'auha_body.png', _auhaContainer);
	_auha_body_png.angle = 14.0;
	_auha_body_png.scale.setTo(0.8, 0.8);
	
	var _ahura_right_arm_png = this.game.add.sprite(426, 317, 'dinoAtlas', 'ahura_right_arm.png', _auhaContainer);
	_ahura_right_arm_png.angle = -10.999999999999998;
	_ahura_right_arm_png.scale.setTo(0.8, 0.8);
	
	var _ahura_left_arm_png = this.game.add.sprite(357, 338, 'dinoAtlas', 'ahura_left_arm.png', _auhaContainer);
	_ahura_left_arm_png.angle = -17.6;
	_ahura_left_arm_png.scale.setTo(0.8, 0.8);
	
	var _ahura_body_png = this.game.add.sprite(359, 304, 'dinoAtlas', 'ahura_body.png', _auhaContainer);
	_ahura_body_png.angle = -14.0;
	_ahura_body_png.scale.setTo(0.8, 0.8);
	
	var _auha_eyeball_png = this.game.add.sprite(510, 305, 'dinoAtlas', 'auha_eyeball.png', _auhaContainer);
	_auha_eyeball_png.angle = 14.0;
	_auha_eyeball_png.scale.setTo(0.8, 0.8);
	
	var _ahura_eye_png = this.game.add.sprite(390, 310, 'dinoAtlas', 'ahura_eye.png', _auhaContainer);
	_ahura_eye_png.angle = -14.0;
	_ahura_eye_png.scale.setTo(0.8, 0.8);
	
	var _targetContainer = this.game.add.group(_winContainer);
	
	var _nextButtonContainer = this.game.add.group(_winContainer);
	_nextButtonContainer.position.setTo(359, 794);
	
	var _btnNextPlay = this.game.add.sprite(4, -11, 'mainAtlas', 'btn_large_common.png', _nextButtonContainer);
	_btnNextPlay.anchor.setTo(0.5, 0.5);
	
	var _bottomUIContainer = this.game.add.group(_winContainer);
	_bottomUIContainer.position.setTo(5, 178);
	
	var _characterContainer = this.game.add.group(_bottomUIContainer);
	_characterContainer.position.setTo(343, 927);
	
	var _btnWinCharacter = this.game.add.sprite(0, 0, 'mainAtlas', 'chracter_bg.png', _characterContainer);
	_btnWinCharacter.anchor.setTo(0.5, 0.5);
	
	var _character_bg_png = this.game.add.sprite(5, 88, 'mainAtlas', 'character_bg.png', _characterContainer);
	_character_bg_png.anchor.setTo(0.5, 0.5);
	
	var _textCharacter = this.game.add.text(-79, 69, 'CHARACTER', {"font":"32px Arial"}, _characterContainer);
	
	var _winCharacterIcon = this.game.add.sprite(0, -36, 'characterAtlas', '1.png', _characterContainer);
	_winCharacterIcon.anchor.setTo(0.5, 0.5);
	
	var _freeGiftContainer = this.game.add.group(_bottomUIContainer);
	_freeGiftContainer.position.setTo(583, 935);
	
	var _textFreeGift = this.game.add.text(-69, 58, 'FREE GIFT', {"font":"32px Lilita One"}, _freeGiftContainer);
	
	var _waitFreeCoinContainer = this.game.add.group(_freeGiftContainer);
	
	var _waitFreeCoin = this.game.add.sprite(0, 0, 'mainAtlas', 'bonus_time.png', _waitFreeCoinContainer);
	_waitFreeCoin.anchor.setTo(0.5, 0.5);
	
	var _timeLeftBg = this.game.add.sprite(-57, -114, 'mainAtlas', 'time_left_bg.png', _waitFreeCoinContainer);
	
	var _textRemainTime = this.game.add.text(1, -88, '', {"font":"bold 18px Lilita One","fill":"#74baba"}, _waitFreeCoinContainer);
	_textRemainTime.anchor.setTo(0.5, 0.5);
	
	var _completeFreeCoinContainer = this.game.add.group(_freeGiftContainer);
	
	var _completeFreeCoin = this.game.add.sprite(-41, -92, 'mainAtlas', 'bonus_fin.png', _completeFreeCoinContainer);
	
	var _text = this.game.add.text(0, -122, 'TOUCH', {"font":"bold 32px Lilita One"}, _completeFreeCoinContainer);
	_text.anchor.setTo(0.5, 0.5);
	
	var _rankContainer = this.game.add.group(_bottomUIContainer);
	_rankContainer.position.setTo(98, 946);
	_rankContainer.alpha = 0.3;
	
	var _rank_icon_png = this.game.add.sprite(0, 0, 'mainAtlas', 'rank_icon.png', _rankContainer);
	_rank_icon_png.anchor.setTo(0.5, 0.5);
	
	var _textRank = this.game.add.text(-41, 50, 'RANK', {"font":"32px Arial"}, _rankContainer);
	
	var _clearTextContainer = this.game.add.group(_winContainer);
	_clearTextContainer.position.setTo(0, 145);
	
	var _loseContainer = this.game.add.group(this);
	
	var _character = this.game.add.group(_loseContainer);
	_character.position.setTo(132, 534);
	
	var _btnLoseCharacter = this.game.add.sprite(0, 0, 'mainAtlas', 'common_small_circle.png', _character);
	_btnLoseCharacter.scale.setTo(0.9, 0.9);
	_btnLoseCharacter.anchor.setTo(0.5, 0.5);
	
	var _loseCharacterIcon = this.game.add.sprite(-1, -22, 'characterAtlas', '1.png', _character);
	_loseCharacterIcon.scale.setTo(0.75, 0.75);
	_loseCharacterIcon.anchor.setTo(0.5, 0.5);
	
	var _textBgCharacter = this.game.add.sprite(-81, 40, 'mainAtlas', 'btn_label_long.png', _character);
	
	var _replayContainer = this.game.add.group(_loseContainer);
	_replayContainer.position.setTo(363, 540);
	
	var _btnReplay = this.game.add.sprite(0, 0, 'mainAtlas', 'play_btn.png', _replayContainer);
	_btnReplay.anchor.setTo(0.5, 0.5);
	
	var _iconReplay = this.game.add.sprite(4, -3, 'mainAtlas', 'replay_ico.png', _replayContainer);
	_iconReplay.anchor.setTo(0.5, 0.5);
	
	var _homeContainer = this.game.add.group(_loseContainer);
	_homeContainer.position.setTo(595, 535);
	
	var _btnHome = this.game.add.sprite(0, 0, 'mainAtlas', 'common_small_circle.png', _homeContainer);
	_btnHome.scale.setTo(0.9, 0.9);
	_btnHome.anchor.setTo(0.5, 0.5);
	
	var _iconHome = this.game.add.sprite(2, -6, 'mainAtlas', 'home_icon.png', _homeContainer);
	_iconHome.anchor.setTo(0.5, 0.5);
	
	var _bgHome = this.game.add.sprite(-57, 40, 'mainAtlas', 'btn_label_short.png', _homeContainer);
	
	var _loseTextContainer = this.game.add.group(_loseContainer);
	
	
	
	// public fields
	
	this.fBlindContainer = _blindContainer;
	this.fWinContainer = _winContainer;
	this.fRightRainbow = _rightRainbow;
	this.fLeftRainbow = _leftRainbow;
	this.fEmitterContainer = _emitterContainer;
	this.fAuhaContainer = _auhaContainer;
	this.fTargetContainer = _targetContainer;
	this.fNextButtonContainer = _nextButtonContainer;
	this.fBtnNextPlay = _btnNextPlay;
	this.fBottomUIContainer = _bottomUIContainer;
	this.fBtnWinCharacter = _btnWinCharacter;
	this.fTextCharacter = _textCharacter;
	this.fWinCharacterIcon = _winCharacterIcon;
	this.fTextFreeGift = _textFreeGift;
	this.fWaitFreeCoinContainer = _waitFreeCoinContainer;
	this.fWaitFreeCoin = _waitFreeCoin;
	this.fTimeLeftBg = _timeLeftBg;
	this.fTextRemainTime = _textRemainTime;
	this.fCompleteFreeCoinContainer = _completeFreeCoinContainer;
	this.fCompleteFreeCoin = _completeFreeCoin;
	this.fTextRank = _textRank;
	this.fClearTextContainer = _clearTextContainer;
	this.fLoseContainer = _loseContainer;
	this.fCharacter = _character;
	this.fBtnLoseCharacter = _btnLoseCharacter;
	this.fLoseCharacterIcon = _loseCharacterIcon;
	this.fTextBgCharacter = _textBgCharacter;
	this.fReplayContainer = _replayContainer;
	this.fBtnReplay = _btnReplay;
	this.fIconReplay = _iconReplay;
	this.fHomeContainer = _homeContainer;
	this.fBtnHome = _btnHome;
	this.fIconHome = _iconHome;
	this.fBgHome = _bgHome;
	this.fLoseTextContainer = _loseTextContainer;
	/* --- post-init-begin --- */
	//LoseContainer
	{
		var titleFontStyle = {fontSize : "142px", fill : '#ffffff', font : 'Lilita One', boundsAlignH: 'center', boundsAlignV: 'middle'};
		_txtTitle = this.game.add.text(0, 0, StzTrans.translate(ELocale.FAIL_TEXT_B), titleFontStyle, this.fLoseTextContainer);
		_txtTitle.setTextBounds(0, this.game.world.height*0.22, this.game.world.width, 0);
		
		var loseStageFontStyle = {fontSize : "60px", fill : '#96a5aa', font : 'Lilita One', boundsAlignH: 'center', boundsAlignV: 'middle'};
		this.fTextLoseStage = this.game.add.text(0, 0, "", loseStageFontStyle, this.fLoseTextContainer);
		this.fTextLoseStage.setTextBounds(0, this.game.world.height*0.14, this.game.world.width, 0);
		
		this.fBtnLoseCharacter.tint = 0x4dbef0;
		this.fBtnLoseCharacter.alpha = 0.3;
		_btnHome.tint = 0x4dbef0;
		_btnHome.alpha = 0.3;
		
		_btnReplay.tint = 0x89ce1b;
		this.fBgHome.tint = 0x007793;
		this.fTextBgCharacter.tint = 0x007793;
		
		var iconTitleFontStyle = {fontSize : "24px", fill : '#ffffff', font : 'Lilita One', boundsAlignH: 'center', boundsAlignV: 'middle'};
		_characterTitle = this.game.add.text(0, 0, StzTrans.translate(ELocale.CHARACTER_TEXT_B), iconTitleFontStyle, this.fLoseContainer);
		_characterTitle.setTextBounds(0, 3, this.fTextBgCharacter.width, this.fTextBgCharacter.height);
		this.fTextBgCharacter.addChild(_characterTitle);
		
		_homeTitle = this.game.add.text(0, 0, StzTrans.translate(ELocale.HOME_TEXT_B), iconTitleFontStyle, this.fLoseContainer);
		_homeTitle.setTextBounds(0, 3, this.fBgHome.width, this.fBgHome.height);
		this.fBgHome.addChild(_homeTitle);
		
		leaderboard.addBtn("restartScene", {id:"stz-btnRestartArea", btn:this.fBtnReplay});
		leaderboard.onClickReplayGame = null;
		leaderboard.onClickReplayGame = function() {
			window.sounds.sound('sfx_button').play();
			this.game.state.getCurrentState().offBlindFunc();
			this.game.state.getCurrentState().restartInGame();
			this.visible = false;
		}.bind(this);
		
		leaderboard.addBtn("restartScene", {id:"stz-btnCharacterArea", btn:this.fBtnLoseCharacter});
		leaderboard.onClickCharacterSelect = null;
		leaderboard.onClickCharacterSelect = function() {
			window.sounds.sound('sfx_button').play();
			this.game.state.getCurrentState().destroyInGameScene(ESceneState.GO_CHARACTER_SCENE);
		}.bind(this);
		
		leaderboard.addBtn("restartScene", {id:"stz-btnStageArea", btn:this.fBtnHome});
		leaderboard.onClickStageSelect = null;
		leaderboard.onClickStageSelect = function() {
			window.sounds.sound('sfx_button').play();
			this.game.state.getCurrentState().destroyInGameScene(ESceneState.GO_LOBBY_SCENE);
		}.bind(this);
	}
	
	//WinContainer
	{
		_btnNextPlay.tint = 0x5528d1;
		_textRank.font = 'Lilita One';
		_textRank.fill = '#005d72';
		_textRank.text = StzTrans.translate(ELocale.RANK_TEXT_B);
		_textCharacter.font = 'Lilita One';
		_textCharacter.fill = '#ffffff';
		_textCharacter.text = StzTrans.translate(ELocale.CHARACTER_TEXT_B);
		_textFreeGift.font = 'Lilita One';
		_textFreeGift.fill = '#005d72';
		_textFreeGift.text = StzTrans.translate(ELocale.FREE_GIFT_TEXT_B);
		
		var stageFontStyle = {fontSize : "60px", fill : '#ffffff', font : 'Lilita One', boundsAlignH: 'center', boundsAlignV: 'middle'};
		var nextFontStyle = {fontSize: '120px', fill: '#ffffff', font: 'Lilita One', boundsAlignH: 'center', boundsAlignV: 'middle'};
		var clearFontStyle = {fontSize: '142px', fill: '#ffffff', font: 'Lilita One', boundsAlignH: 'center', boundsAlignV: 'middle'};
		
		_textNext = this.game.add.text(0, 0, StzTrans.translate(ELocale.NEXT_TEXT_B), nextFontStyle, this);
		_textNext.setTextBounds(-this.fBtnNextPlay.width/2, -this.fBtnNextPlay.height/1.6, this.fBtnNextPlay.width, this.fBtnNextPlay.height);
		this.fBtnNextPlay.addChild(_textNext);
		this.fStageNum = this.game.add.text(0, 0, "", stageFontStyle, this);
		this.fStageNum.setTextBounds(-this.fBtnNextPlay.width/2, -this.fBtnNextPlay.height/3.5, this.fBtnNextPlay.width, this.fBtnNextPlay.height);
		this.fBtnNextPlay.addChild(this.fStageNum);
		
		_textClear = this.game.add.text(0, 0, StzTrans.translate(ELocale.CLEAR_TEXT_B), clearFontStyle, this.fClearTextContainer);
		_textClear.setTextBounds(0, 90, this.game.world.width, 0);
		this.fTopStageNum = this.game.add.text(0, 0, "", stageFontStyle, this.fClearTextContainer);
		this.fTopStageNum.setTextBounds(0, 0, this.game.world.width, 0);

		this.fBtnNextPlay.inputEnabled = true;
		this.fBtnNextPlay.events.onInputUp.add(function(){
			window.sounds.sound('sfx_button').play();
			if(this.fEmitterContainer.children){
				this.fEmitterContainer.children[0].destroy();
			}
			this.game.state.getCurrentState().restartInGame();
			this.visible = false;
		}.bind(this));

		this.fBtnWinCharacter.inputEnabled = true;
		this.fBtnWinCharacter.events.onInputUp.add(function() {
			window.sounds.sound('sfx_button').play();
			this.game.state.getCurrentState().destroyInGameScene(ESceneState.GO_CHARACTER_SCENE);
			/**
			 * todo: 캐릭터선택씬 호출.
			 */
		}, this);
		
		this.fCompleteFreeCoin.inputEnabled = true;
		this.fCompleteFreeCoin.events.onInputUp.add(function(){
			var freeCoin = (StaticManager.dino_thornz_base.get('freecoin_coin'))? StaticManager.dino_thornz_base.get("freecoin_coin").value : InGameConfig.FREE_COIN_COIN;
			window.sounds.sound('sfx_button').play();
			PlayerDataManager.saveData.updateCoin(freeCoin);
			PlayerDataManager.saveData.setFreeCoinTimeStamp(new Date().getTime());
			PlayerDataManager.saveData.save();
			this.updateUI();
		}.bind(this));
	}
	
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var ResultScene_proto = Object.create(Phaser.Group.prototype);
ResultScene.prototype = ResultScene_proto;
ResultScene.prototype.constructor = ResultScene;

/* --- end generated code --- */
// -- user code here --
ResultScene.prototype.setData = function(isSuccess, inCompleteCallback){
	this.fLoseContainer.visible = false;
	this.fWinContainer.visible = false;
	var stageNum = PlayerDataManager.saveData.getBestStage();
	
	if(isSuccess === true){
		PlayerDataManager.saveData.updateBestStage();
		PlayerDataManager.saveLederBoardData();
		
		this.fNextButtonContainer.visible = true;
		this.fBtnReplay.visible = false;
		this.fWinContainer.visible = true;

		this.fStageNum.text = StzUtil.strFormatObj(StzTrans.translate(ELocale.STAGE_TEXT_B), {N : PlayerDataManager.saveData.getBestStage()});
		this.fTopStageNum.text = StzUtil.strFormatObj(StzTrans.translate(ELocale.STAGE_TEXT_B), {N : PlayerDataManager.saveData.getBestStage()-1});
		this.fWinCharacterIcon.frameName = PlayerDataManager.saveData.getCharacterID() + '.png';
		this.showWin();
		this.updateUI();
	}
	else{
		this.fNextButtonContainer.visible = false;
		this.fBtnReplay.visible = true;
		this.fLoseContainer.visible = true;
	
		this.fTextLoseStage.text = StzUtil.strFormatObj(StzTrans.translate(ELocale.STAGE_TEXT_B), {N : PlayerDataManager.saveData.getBestStage()});
		this.fLoseCharacterIcon.frameName = PlayerDataManager.saveData.getCharacterID() + '.png';
	
		this.showLose();
	}
	PlayerDataManager.saveData.save();
};

ResultScene.prototype.updateUI = function(){
	var freeCoinTimeStamp = PlayerDataManager.saveData.getFreeCoinTimeStamp();
	var freeCoinTime = (StaticManager.dino_thornz_base.get('freecoin_time'))? StaticManager.dino_thornz_base.get("freecoin_time").value : InGameConfig.FREE_COIN_TIME;
	var completeFreeCoinTimeStamp = freeCoinTimeStamp + freeCoinTime;
	
	var remainTime = completeFreeCoinTimeStamp - new Date().getTime();
	
	if(remainTime <= 0){
		this.fWaitFreeCoinContainer.visible = false;
		this.fCompleteFreeCoinContainer.visible = true;
	}
	else{
		this.fWaitFreeCoinContainer.visible = true;
		this.fCompleteFreeCoinContainer.visible = false;
		this.fTextRemainTime.text = StzUtil.millysecondToHMs(remainTime, ['H', 'M']);
		if(this.freeCoinTimer){
			this.game.time.events.remove(this.freeCoinTimer);
			this.freeCoinTimer = null;
		}
		this.freeCoinTimer = this.game.time.events.loop(1000, function(){
			remainTime = completeFreeCoinTimeStamp - new Date().getTime();
			
			this.fTextRemainTime.text = StzUtil.millysecondToHMs(remainTime, ['H', 'M']);
			if(remainTime <= 0){
				if(this.freeCoinTimer){
					this.game.time.events.remove(this.freeCoinTimer);
					this.freeCoinTimer = null;
				}
				this.fWaitFreeCoinContainer.visible = false;
				this.fCompleteFreeCoinContainer.visible = true;
			}
		}.bind(this));
	}
};

ResultScene.prototype.showWin = function(){
	this.fTargetContainer.alpha = 0;
	this.fTargetContainer.scale.set(0.9);
	this.fTargetContainer.pivot.set(360, 551);
	this.fTargetContainer.x = 360;
	this.fTargetContainer.y = 551;
	
	this.fNextButtonContainer.alpha = 0;
	this.fNextButtonContainer.scale.set(0.3);
	
	this.fBottomUIContainer.alpha = 0;
	this.fClearTextContainer.alpha = 0;
	this.fClearTextContainer.scale.set(0.5);
	
	this.fClearTextContainer.pivot.set(360, this.fClearTextContainer.height/2);
	this.fClearTextContainer.position.set(360, 145 + this.fClearTextContainer.height/2);
	
	this.fAuhaContainer.y = 116;
	this.fAuhaContainer.visible = false;
	
	this.fLeftRainbow.x = 409;
	this.fLeftRainbow.alpha = 0;
	
	this.fRightRainbow.x = 321;
	this.fRightRainbow.alpha = 0;
	
	if(this.tweenRainBow){
		this.game.tweens.remove(this.tweenRainBow);
		this.tweenRainBow = null;
	}
	
	StzUtil.alphaScaleTween(this.game, this.fNextButtonContainer, this.fNextButtonContainer.alpha, this.fNextButtonContainer.scale.x, 500);
	this.game.add.tween(this.fTargetContainer).to({alpha : 1}, 200, Phaser.Easing.Linear.None, true)
	.onComplete.addOnce(function(){
		StzUtil.alphaScaleTween(this.game, this.fClearTextContainer, this.fClearTextContainer.alpha, this.fClearTextContainer.scale.x, 300);
		
		this.fAuhaContainer.visible = true;
		this.game.add.tween(this.fAuhaContainer).to({y:16}, 200, Phaser.Easing.Linear.None, true);
		
		this.game.add.tween(this.fTargetContainer.scale).to({x: 1, y:1}, 300, Phaser.Easing.Linear.None, true)
		.onUpdateCallback(function(inparam){
			if(inparam){
				this.fBottomUIContainer.alpha = Phaser.Math.mapLinear(inparam.target.x, 0.9, 1, 0, 1);
				this.fLeftRainbow.x = Phaser.Math.mapLinear(inparam.target.x, 0.9, 1, 409, 309);
				this.fLeftRainbow.alpha = Phaser.Math.mapLinear(inparam.target.x, 0.9, 1, 0, 1);
				this.fRightRainbow.x = Phaser.Math.mapLinear(inparam.target.x, 0.9, 1, 321, 421);
				this.fRightRainbow.alpha = Phaser.Math.mapLinear(inparam.target.x, 0.9, 1, 0, 1);
			}
		}.bind(this))
		.onComplete.addOnce(function(){
			idleMotion.call(this);
		}.bind(this));
	}.bind(this));

	function idleMotion(){
		this.isTweenRainBow = true;
		if(this.fTargetContainer.children[0] instanceof TargetModel){
			this.fTargetContainer.children[0].targetIdelMotionInWinReult();
		}
		rainBowTween.call(this);
		
		//뒤에 파티클 추가
		if(this.fEmitterContainer.children.length === 0){
			var emitter = this.game.add.emitter(this.game.world.centerX, this.game.world.centerY, 40);
			emitter.width = this.game.world.width*0.8;
			emitter.makeParticles('mainAtlas', ['common_coin.png', 'leaf01.png', 'leaf01.png','leaf01.png', 'leaf02.png']);
			emitter.minParticleScale = 0.5;
			emitter.maxParticleScale = 0.5;
			emitter.setYSpeed(-150, -150);
			emitter.setXSpeed(0, 0);
			emitter.gravity = 0;
			emitter.setAlpha(1, 0, 6000, Phaser.Easing.Exponential.In);
			
			emitter.start(false, 3000, 250, 0);
			this.fEmitterContainer.add(emitter);
			
			var randomTintArray = [0x7b57ff, 0x7ae805, 0x1dbfff, 0xe82d62];
			for(var i = 0; i < emitter.children.length; i++){
				if(emitter.children[i].frameName === 'leaf01.png'){
					emitter.children[i].tint = randomTintArray[StzUtil.createRandomInteger(0, randomTintArray.length-1)];
				}
				else if(emitter.children[i].frameName === 'leaf02.png'){
					emitter.children[i].tint = 0xffce00;
				}
			}
		}
	}
	
	function rainBowTween() {
		if(this.isTweenRainBow === false){
			return;
		}
		var randomLeftX = StzUtil.createRandomInteger(321, 409);
		var randomRightX = StzUtil.createRandomInteger(321, 421);
		
		var curLeftX = this.fLeftRainbow.x;
		var curRightX = this.fRightRainbow.x;
	
		this.tweenRainBow = this.game.add.tween(this.fLeftRainbow).to({x:randomLeftX}, 400, Phaser.Easing.Linear.None, true, 0, 0, true);
		this.tweenRainBow.onUpdateCallback(function(inparam){
			this.fRightRainbow.x = Phaser.Math.mapLinear(inparam.target.x, curLeftX, randomLeftX, curRightX, randomRightX);
		}.bind(this))
		this.tweenRainBow.onComplete.addOnce(function(){
			rainBowTween.call(this);
		}.bind(this));
	}
};

ResultScene.prototype.showLose = function(){
	if(leaderboard){
		leaderboard.openLeaderboard(ELeaderboardType.FRIEND_LIST, this.game.canvas.style, "restartScene");
	}
	
	this.fHomeContainer.alpha = 0;
	this.fReplayContainer.alpha = 0;
	this.fCharacter.alpha = 0;
	
	this.fHomeContainer.scale.set(0.5);
	this.fReplayContainer.scale.set(0.5);
	this.fCharacter.scale.set(0.5);
	
	this.game.add.tween(this.fReplayContainer).to({alpha : 1}, 300, Phaser.Easing.Linear.None, true)
	.onUpdateCallback(function(inParam){
		this.fReplayContainer.scale.set(Phaser.Math.mapLinear(inParam.target.alpha, 0, 1, 0.5, 1));
	}.bind(this));

	this.game.time.events.add(100, function(){
		this.game.add.tween(this.fHomeContainer).to({alpha : 1}, 300, Phaser.Easing.Linear.None, true)
		.onUpdateCallback(function(inParam){
			this.fCharacter.alpha = inParam.target.alpha;
			this.fHomeContainer.scale.set(Phaser.Math.mapLinear(inParam.target.alpha, 0, 1, 0.5, 1));
			this.fCharacter.scale.set(Phaser.Math.mapLinear(inParam.target.alpha, 0, 1, 0.5, 1));
		}.bind(this));
	}.bind(this));
};

ResultScene.prototype.superDestroy = ResultScene.prototype.destroy;
ResultScene.prototype.destroy = function(destroyChildren, soft) {
	if(this.freeCoinTimer){
		this.game.time.events.remove(this.freeCoinTimer);
		this.freeCoinTimer = null;
	}
	
	this.isTweenRainBow = false;
	this.superDestroy(destroyChildren, soft);
};