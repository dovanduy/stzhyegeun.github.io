
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * InviteUpdateView.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function InviteUpdateView(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _inviteContainer = this.game.add.group(this);
	
	this.game.add.sprite(0, 0, 'shareAtlas', 'shareFImage_dinoThronz.jpg', _inviteContainer);
	
	var _coinContainer = this.game.add.group(this);
	
	this.game.add.sprite(0, 0, 'shareAtlas', 'shareCoin.jpg', _coinContainer);
	
	var _characterContainer = this.game.add.group(this);
	
	this.game.add.sprite(0, 0, 'shareAtlas', 'shareBuy.jpg', _characterContainer);
	
	var _iconCharacter = this.game.add.sprite(365, 150, 'characterAtlas', '9.png', _characterContainer);
	_iconCharacter.scale.setTo(1.6, 1.6);
	_iconCharacter.anchor.setTo(0.5, 0.5);
	
	var _textName = this.game.add.text(365, 349, 'CANDY BAR', {"font":"bold 34px Lilita One","fill":"#ffffff"}, _characterContainer);
	_textName.anchor.setTo(0.5, 0.5);
	
	
	
	// public fields
	
	this.fInviteContainer = _inviteContainer;
	this.fCoinContainer = _coinContainer;
	this.fCharacterContainer = _characterContainer;
	this.fIconCharacter = _iconCharacter;
	this.fTextName = _textName;
	
}

/** @type Phaser.Group */
var InviteUpdateView_proto = Object.create(Phaser.Group.prototype);
InviteUpdateView.prototype = InviteUpdateView_proto;
InviteUpdateView.prototype.constructor = InviteUpdateView;

/* --- end generated code --- */
// -- user code here --
var EShareType = {
		INVITE		:	'invite',
		COIN		:	'coin',
		CHARACTER	:	'character',
		RESULT		:	'result'
};

InviteUpdateView.prototype.setData = function(inType, inData){
	this.fInviteContainer.visible = false;
	this.fCoinContainer.visible = false;
	this.fCharacterContainer.visible = false;
	
	if(inType === EShareType.INVITE){
		this.fInviteContainer.visible = true;
	}
	else if(inType === EShareType.COIN){
		this.fCoinContainer.visible = true;
	}
	else if(inType === EShareType.CHARACTER){
		if(inData){
			this.fCharacterContainer.visible = true;
			this.fTextName.text = inData.name;
			this.fIconCharacter.frameName = inData.id + '.png';
		}
	}
}