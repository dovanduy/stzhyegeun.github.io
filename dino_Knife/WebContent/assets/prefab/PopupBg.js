
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * PopupBg.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function PopupBg(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _posTitle = this.game.add.group(this);
	_posTitle.position.setTo(-310, -438);
	
	var _dummy_popup_png = this.game.add.sprite(0, 0, 'mainAtlas', 'dummy_popup.png', this);
	_dummy_popup_png.anchor.setTo(0.5, 0.5);
	
	var _btnClose = this.game.add.sprite(243, -446, 'mainAtlas', 'x_btn.png', this);
	_btnClose.anchor.setTo(0.5, 0.5);
	_btnClose.tint = 0x81badf;
	
	
	
	// public fields
	
	this.fDummy_popup_png = _dummy_popup_png;
	this.fBtnClose = _btnClose;
	/* --- post-init-begin --- */
	var btnSizeOffset = 35;
	this.fBtnClose.hitArea = new Phaser.Rectangle(-1 * btnSizeOffset, -1 * btnSizeOffset, this.fBtnClose.width + btnSizeOffset * 2, this.fBtnClose.height + btnSizeOffset * 2);
	
	var titleFontStyle = {fontSize : "68px", fill : '#2891c6', font : 'Lilita One', boundsAlignH: 'center', boundsAlignV: 'middle'};
	this.fTextTitle = this.game.add.text(0, 0, "", titleFontStyle, this);
	this.fTextTitle.setTextBounds(_posTitle.x, _posTitle.y, _dummy_popup_png.width, 0);
	/* --- post-init-end --- */
	
}

/** @type Phaser.Group */
var PopupBg_proto = Object.create(Phaser.Group.prototype);
PopupBg.prototype = PopupBg_proto;
PopupBg.prototype.constructor = PopupBg;

/* --- end generated code --- */
// -- user code here --
PopupBg.prototype.setData = function(inTitleText, inCloseCallback){
	this.fTextTitle.text = inTitleText;

	this.fBtnClose.inputEnabled = true;
	this.fBtnClose.events.onInputUp.add(function(){
		window.sounds.sound('sfx_button').play();
		PlayerDataManager.saveData.save();
		if(inCloseCallback){
			inCloseCallback();
		}
	}.bind(this));
};

PopupBg.destroyAlphaTween = function(inGame, inGroup, inCloseCallback){
	this.game = inGame;
	
	this.game.input.enabled = false;
	
	var alphaTween = this.game.add.tween(inGroup).to({alpha: 0}, InGameConfig.SCENE_FADE_OUT_SPEED, Phaser.Easing.Quadratic.Out, true);
	alphaTween.onComplete.addOnce(function(inParam) {
		this.game.input.enabled = true;
		inGroup.visible = false;
		inGroup.alpha = 1;
		
		if (inParam) {
			this.game.tweens.remove(inParam);
		}
		
		if(inCloseCallback){
			inCloseCallback();
		}
	}.bind(this, alphaTween));
};