
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * ProfileInfo.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function ProfileInfo(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _profileMask = this.game.add.sprite(0, 0, 'titleMask', null, this);
	
	var _profileBg = this.game.add.sprite(0, 0, 'titleMask', null, this);
	_profileBg.anchor.setTo(0.5, 0.5);
	
	var _txtStageValue = this.game.add.text(44, -4, '1976', {"font":"bold 38px Lilita One"}, this);
	
	var _txtName = this.game.add.text(43, -28, 'Hyunwoo', {"font":"bold 22px Arial"}, this);
	
	var _profileContainer = this.game.add.group(this);
	
	
	
	// public fields
	
	this.fProfileMask = _profileMask;
	this.fProfileBg = _profileBg;
	this.fTxtStageValue = _txtStageValue;
	this.fTxtName = _txtName;
	this.fProfileContainer = _profileContainer;
	/* --- post-init-begin --- */
	_profileMask.visible = false;
	_txtName.fill = '#0080CE';
	_txtStageValue.fill = '004568';
	
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var ProfileInfo_proto = Object.create(Phaser.Group.prototype);
ProfileInfo.prototype = ProfileInfo_proto;
ProfileInfo.prototype.constructor = ProfileInfo;

/* --- end generated code --- */
// -- user code here --
ProfileInfo.prototype.setData = function(inData){
	this.fTxtName.text = StzUtil.cutText(inData.profileInfo.getName(), 7);
	this.fTxtStageValue.text = inData.bestStage;
	
	this.game.load.crossOrigin = 'Anonymous';
	this.updateProfileImage(inData.profileInfo.getImageKey());
};

ProfileInfo.prototype.updateProfileImage = function(inImageKey) {
	if (this.game) {
		if (this.game.cache.checkImageKey(inImageKey) === false) {
			inImageKey = "default_photo";
		}
		var thumbImage;
		thumbImage = this.game.add.image(0, 0, inImageKey);
		
		var ratio = this.fProfileMask.width / thumbImage.width;
		thumbImage.scale.setTo(ratio, ratio);
		
		var profileBMD = this.game.make.bitmapData(this.fProfileMask.width, this.fProfileMask.height);
		profileBMD.alphaMask(thumbImage, this.fProfileMask);
		this.profile = this.game.add.image(0, 0, profileBMD);
		this.profile.anchor.setTo(0.5, 0.5);
		this.fProfileContainer.add(this.profile);
		
		thumbImage.kill();
		return true;
	}
	
	return false;
};
