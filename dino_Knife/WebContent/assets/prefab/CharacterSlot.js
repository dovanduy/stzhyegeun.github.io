
/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * CharacterSlot.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function CharacterSlot(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _slotBG = this.game.add.sprite(0, 0, 'mainAtlas', 'common_small_circle.png', this);
	_slotBG.alpha = 0.2;
	_slotBG.anchor.setTo(0.5, 0.5);
	
	var _selected = this.game.add.sprite(0, 0, 'mainAtlas', 'selected.png', this);
	_selected.anchor.setTo(0.5, 0.5);
	_selected.tint = 0xffd800;
	
	var _character = this.game.add.sprite(0, -25, 'characterAtlas', '1.png', this);
	_character.anchor.setTo(0.5, 0.5);
	
	var _name = this.game.add.text(0, 84, 'Name', {"font":"bold 24px Lilita One","fill":"#ffffff"}, this);
	_name.anchor.setTo(0.5, 0.5);
	
	var _lockIcon = this.game.add.sprite(-52, -46, 'mainAtlas', 'share_lock.png', this);
	_lockIcon.anchor.setTo(0.5, 0.5);
	
	
	
	// public fields
	
	this.fSlotBG = _slotBG;
	this.fSelected = _selected;
	this.fCharacter = _character;
	this.fName = _name;
	this.fLockIcon = _lockIcon;
	/* --- post-init-begin --- */

	this.fSelected.visible = false;
	this.index = null;
	this.lockType = null;
	this.lockValue = null;
	this.isLock = true;

	this.fSlotBG.inputEnabled = true;
	this.fSlotBG.events.onInputUp.add(function() {
		window.sounds.sound('sfx_button').play();
		if(!this.isLock) {
			this.selectSlot();
		}
		else {
			this.fLockIcon.visible = true;
			/**
			 * todo : 각 잠금 타입 별로 이 후 처리 필요.
			 */
			switch(this.lockType){
				case ECharacter.UnlockCondition.BUY:
					break;
				case ECharacter.UnlockCondition.VIDEO:

					break;
				case ECharacter.UnlockCondition.SHARE:
					
					break;
				case ECharacter.UnlockCondition.GIFT:
					
					break;
			}
			this.parent.showPopupShop(CharacterManager.getCharacterData(this.index + 1));
		}
		
	}, this);
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var CharacterSlot_proto = Object.create(Phaser.Group.prototype);
CharacterSlot.prototype = CharacterSlot_proto;
CharacterSlot.prototype.constructor = CharacterSlot;

/* --- end generated code --- */
// -- user code here --
CharacterSlot.prototype.selectedSlot = null;

CharacterSlot.prototype.setSlot = function(index) {
	/**
	 * todo : 잠금 확인.
	 */
	if(index!==undefined){
		this.index = index;
		var characterData = CharacterManager.getCharacterData(index + 1);
	
		var name = characterData.name;
		this.fCharacter.frameName = characterData.id + '.png';
		this.fName.text = name.toUpperCase();
		
		this.lockType = characterData.unlockCondition;
		this.lockValue = characterData.unlockValue;
		this.isLock = !characterData.isUnlock;
	}
	
	if(this.isLock) {
		this.fCharacter.alpha = 0.3;
		this.fLockIcon.visible = true;
		
		switch(this.lockType){
			case ECharacter.UnlockCondition.BUY:
				this.fLockIcon.frameName =  "lock.png";
				break;
			case ECharacter.UnlockCondition.VIDEO:
				this.fLockIcon.frameName = "ad_lock.png";
				break;
			case ECharacter.UnlockCondition.SHARE:
				this.fLockIcon.frameName =  "share_lock.png";
				break;
			case ECharacter.UnlockCondition.GIFT:
				this.fLockIcon.frameName = "gift_lock.png";
				break;
		}
	}
	else {
		this.fCharacter.alpha = 1;
		this.fLockIcon.visible = false;
	}
};

CharacterSlot.prototype.selectSlot = function() {
	var inGameState = this.game.state.getCurrentState();
	
	if(inGameState.characterScene.selectedSlot!==null) {
		if(inGameState.characterScene.selectedSlot.index===this.index) return;
		
		inGameState.characterScene.selectedSlot.fSelected.visible = false;
	}

	this.fSelected.visible = true;
	inGameState.characterScene.selectedSlot = this;

	var character =  CharacterManager.getCharacterData(this.index + 1);
	inGameState.lobbyScene.fIconCharacter.frameName = character.id + '.png';
	/**
	 * 여기서 로비, 결과씬 아이콘 바꾸면 됩니다.
	 * 위의 코드는 로비씬 캐릭터 아이콘 바꾸는 예시코드입니다.
	 */

	PlayerDataManager.saveData.setCharacterID(this.index + 1);
};