# 1. install node & npm from [https://nodejs.org/en/]
# 2. check node & npm installed from powershell
# 3. install uglifyjs using npm [npm install uglify-js -g] (https://github.com/mishoo/UglifyJS2)
# 4. install python [https://www.python.org/]
# 4. run this file [uglify.py] from file explorer

import subprocess
import os, shutil, errno
from datetime import date

UGLIFY_LIST = [
    "WebContent/lib/phaser.js"
    , "WebContent/lib/Sounds.js"
    , "WebContent/lib/plugins/ListBoxController.js"

    , "WebContent/js/config/StzBuildConfig.js"
    , "WebContent/js/config/StzGameConfig.js"

	, "WebContent/lib/StzLog.js"
	, "WebContent/lib/StzUtility.js"

    , "WebContent/js/enum/EnumLocale.js"

    , "WebContent/js/server/ServerManager.js"

    , "WebContent/js/manager/StzTranslator.js"
    , "WebContent/js/manager/PlayerDataManager.js"
    , "WebContent/js/manager/StaticManager.js"
    , "WebContent/js/manager/StageManager.js"
    , "WebContent/js/manager/CharacterManager.js"
    , "WebContent/js/manager/GGManager.js"
    , "WebContent/js/manager/FbManager.js"

    , "WebContent/js/model/TargetModel.js"
    , "WebContent/js/model/player/ProfileInfoModel.js"
    , "WebContent/js/model/player/SaveDataModel.js"

    , "WebContent/js/Main.js"
    , "WebContent/js/Boot.js"
    , "WebContent/js/Preload.js"
    , "WebContent/js/InGame.js"

    , "WebContent/js/controller/InGameController.js"
    , "WebContent/js/controller/ObjectPoolingController.js"
]

UGLIFY_OUTPUT = "Build/dinothornz.min.js"
UGLIFY_OPTIONS = " -c -m"# --mangle-props

BUILD_CONFIG = "//Generated by uglify.js\nvar EServerMode = {DEV:0, STAGE:1,LIVE:2};\nvar StzBuildConfig = {\n\tSERVER_MODE: EServerMode."

input_func = None
try:
    input_func = raw_input
except NameError:
    input_func = input

def copyanything(src, dest):

    if os.path.exists(dest):
        if os.path.isdir(dest):
            shutil.rmtree(dest)
            
        else:
            os.remove(dest)

    if os.path.isdir(src):
        shutil.copytree(src, dest)
    else:
        shutil.copy(src, dest)

        '''
        try:
            
        except OSError as exc:
            if exc.errno == errno.ENOTDIR:
                
            else: raise
        

        try:
            shutil.copytree(src, dest)
        except OSError as exc:  
            if exc.errno == errno.ENOTDIR:
                print("COPYTREE ERROR")
                shutil.copy(src, dest)
            else: raise
        '''

def run_win_cmd(cmd):
    result = []
    process = subprocess.Popen(cmd,
                               shell=True,
                               stdout=subprocess.PIPE,
                               stderr=subprocess.PIPE)
    for line in process.stdout:
        result.append(line)
    errcode = process.returncode
    for line in result:
        print(line)
    if errcode is not None:
        raise Exception('cmd %s failed, see above for details', cmd)
                           
inServerMode = input_func("\nEnter server mode - (dev) / (stage) / (live): ")

if inServerMode == "":
    inServerMode = "dev"
print("Selected server: " + inServerMode + "\n\n")

inVersionCode = input_func("Enter version number - (1.0.0): ")
if inVersionCode == "":
    inVersionCode = "1.0.0"
print("Selected version: " + inVersionCode + "\n\n")

archiveName = "dinothornz_" + inServerMode + "_v" + inVersionCode

STR_TODAY = (date.today()).strftime("%b.%d.%Y")
print("Last Update: " + STR_TODAY + "\n\n")

if inServerMode == "dev":
    BUILD_CONFIG = BUILD_CONFIG + "DEV,\n\tVERSION:'" + inVersionCode + "',\n\tLAST_UPDATE:'" + STR_TODAY + "'\n};"
elif inServerMode == "stage":
    BUILD_CONFIG = BUILD_CONFIG + "STAGE,\n\tVERSION:'" + inVersionCode + "',\n\tLAST_UPDATE:'" + STR_TODAY + "'\n};"
elif inServerMode == "live":
    BUILD_CONFIG = BUILD_CONFIG + "LIVE,\n\tVERSION:'" + inVersionCode + "',\n\tLAST_UPDATE:'" + STR_TODAY + "'\n};"
else:
    raise

with open("WebContent/js/config/StzBuildConfig.js", "w") as f:
    f.write(BUILD_CONFIG)
    f.close()

if inServerMode != "dev":
    shutil.make_archive(archiveName, "zip", "WebContent")
else:
    print("Copy files...\n")
    copyanything("WebContent/assets", "Build/assets")
    copyanything("WebContent/stz_leaderboard", "Build/stz_leaderboard")
    copyanything("WebContent/jquery-3.1.1.min.js", "Build/jquery-3.1.1.min.js")
    copyanything("WebContent/index.min.html", "Build/index.html")
    print("Files copy completed!\n\n")
    
    print("Start Uglify...\n")
    procCommand = "uglifyjs " + " ".join(str(filePath) for filePath in UGLIFY_LIST)  + " -o " + UGLIFY_OUTPUT + UGLIFY_OPTIONS
    print(procCommand + "\n")
    run_win_cmd(procCommand)
    print("Uglifying Completed!\n\n")
    shutil.make_archive(archiveName, "zip", "Build")

        
print("Clean temporary files...")
if os.path.exists("Build"):
    print("\tDelete ./Build")
    shutil.rmtree("Build")

