
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * MenuScene.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function MenuScene(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _blindGroup = this.game.add.group(this);
	
	var _restartGroup = this.game.add.group(this);
	_restartGroup.position.setTo(0, -50);
	
	var _txtTitle = this.game.add.text(360, 158, 'STAGE FAILED', {"font":"bold 74px Blogger Sans","fill":"#eaeff8"}, _restartGroup);
	_txtTitle.anchor.setTo(0.5, 0.5);
	
	var _btnRestart = this.game.add.sprite(360, 388, 'MenuScene', 'btn_yellow.png', _restartGroup);
	_btnRestart.anchor.setTo(0.5, 0.5);
	
	var _btnShareAtRestart = this.game.add.group(_restartGroup);
	_btnShareAtRestart.position.setTo(95, 426);
	
	var _txtRestartStage1 = this.game.add.text(0, 54, 'SHARE', {"font":"bold 32px Blogger Sans","fill":"#eaeff8"}, _btnShareAtRestart);
	_txtRestartStage1.anchor.setTo(0.5, 0.5);
	
	var _sprShare = this.game.add.sprite(0, 0, 'MenuScene', 'icon_share.png', _btnShareAtRestart);
	_sprShare.anchor.setTo(0.5, 0.5);
	
	var _btnStageAtRestart = this.game.add.group(_restartGroup);
	_btnStageAtRestart.position.setTo(625, 426);
	
	var _sprStage = this.game.add.sprite(0, 0, 'MenuScene', 'icon_stage.png', _btnStageAtRestart);
	_sprStage.anchor.setTo(0.5, 0.5);
	
	var _txtRestartStage = this.game.add.text(0, 54, 'STAGE', {"font":"bold 32px Blogger Sans","fill":"#eaeff8"}, _btnStageAtRestart);
	_txtRestartStage.anchor.setTo(0.5, 0.5);
	
	var _btnSlowAtRestart = this.game.add.group(_restartGroup);
	_btnSlowAtRestart.position.setTo(360, 635);
	
	var _sprSlowAtRestart = this.game.add.sprite(0, 0, 'MenuScene', 'btn_skyblue.png', _btnSlowAtRestart);
	_sprSlowAtRestart.anchor.setTo(0.5, 0.5);
	
	var _txtSlow = this.game.add.text(0, 90, 'SLOW', {"font":"bold 30px Blogger Sans","fill":"#eaeff8"}, _btnSlowAtRestart);
	_txtSlow.anchor.setTo(0.5, 0.5);
	
	var _sprSlowIcon = this.game.add.sprite(0, 0, 'MenuScene', 'icon_slow.png', _btnSlowAtRestart);
	_sprSlowIcon.anchor.setTo(0.5, 0.5);
	
	var _btnSkipAtRestart = this.game.add.group(_restartGroup);
	_btnSkipAtRestart.position.setTo(565, 635);
	
	var _sprSkipAtRestart = this.game.add.sprite(0, 0, 'MenuScene', 'btn_skyblue.png', _btnSkipAtRestart);
	_sprSkipAtRestart.anchor.setTo(0.5, 0.5);
	
	var _sprSkip = this.game.add.sprite(0, 0, 'MenuScene', 'icon_nextLevel.png', _btnSkipAtRestart);
	_sprSkip.anchor.setTo(0.5, 0.5);
	
	var _txtSkip = this.game.add.text(0, 90, 'SKIP', {"font":"bold 30px Blogger Sans","fill":"#eaeff8"}, _btnSkipAtRestart);
	_txtSkip.anchor.setTo(0.5, 0.5);
	
	var _btnCharacterAtRestart = this.game.add.group(_restartGroup);
	_btnCharacterAtRestart.position.setTo(155, 635);
	
	var _sprCharacterAtRestart = this.game.add.sprite(0, 5, 'MenuScene', 'btn_skyblue.png', _btnCharacterAtRestart);
	_sprCharacterAtRestart.anchor.setTo(0.5, 0.5);
	
	var _txtCharacterAtRestart = this.game.add.text(0, 95, 'CHARACTER', {"font":"bold 30px Blogger Sans","fill":"#eaeff8"}, _btnCharacterAtRestart);
	_txtCharacterAtRestart.anchor.setTo(0.5, 0.5);
	
	var _sprCharacterAtRestart = this.game.add.sprite(0, 0, 'auhaSheet1', 8, _btnCharacterAtRestart);
	_sprCharacterAtRestart.anchor.setTo(0.5, 0.5);
	
	var _menuGroup = this.game.add.group(this);
	
	var _btnRestartAtMenu = this.game.add.sprite(360, 1122, 'MenuScene', 'btn_mainYellow.png', _menuGroup);
	_btnRestartAtMenu.anchor.setTo(0.5, 0.5);
	
	var _txtRestartAtMenu = this.game.add.text(360, 1149, 'This is a text', {"font":"bold 40px Blogger Sans","fill":"#ff9100"}, _menuGroup);
	_txtRestartAtMenu.anchor.setTo(0.5, 0.5);
	
	var _txtRestartAtMenuTitle = this.game.add.text(360, 1090, 'PLAY', {"font":"bold 55px Blogger Sans","fill":"#ff9100"}, _menuGroup);
	_txtRestartAtMenuTitle.anchor.setTo(0.5, 0.5);
	
	var _btnInvite = this.game.add.sprite(126, 1133, 'MenuScene', 'btn_subBlue.png', _menuGroup);
	_btnInvite.anchor.setTo(0.5, 0.5);
	
	var _btnSelect = this.game.add.sprite(593, 1133, 'MenuScene', 'btn_subBlue.png', _menuGroup);
	_btnSelect.anchor.setTo(0.5, 0.5);
	
	var _icon_invite_png = this.game.add.sprite(128, 1130, 'MenuScene', 'icon_invite.png', _menuGroup);
	_icon_invite_png.anchor.setTo(0.5, 0.5);
	
	var _sprCharacter = this.game.add.sprite(593, 1133, 'auhaSheet1', 5, _menuGroup);
	_sprCharacter.anchor.setTo(0.5, 0.5);
	var _sprCharacter_idle = _sprCharacter.animations.add('idle', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 20, true);
	_sprCharacter_idle.play();
	
	var _sprGoToStage = this.game.add.sprite(597, 1132, 'CharacterSelect', 'icon_goToStageSelect.png', _menuGroup);
	_sprGoToStage.anchor.setTo(0.5, 0.5);
	
	var _txtInvite = this.game.add.text(128, 1210, 'INVITE', {"font":"bold 25px Blogger Sans","fill":"#9badcd"}, _menuGroup);
	_txtInvite.anchor.setTo(0.5, 0.5);
	
	var _txtCharacter = this.game.add.text(593, 1210, 'CHARACTER', {"font":"bold 25px Blogger Sans","fill":"#9badcd"}, _menuGroup);
	_txtCharacter.anchor.setTo(0.5, 0.5);
	
	var _sprNaviBG = this.game.add.sprite(360, 54, 'MenuScene', 'img_bgNavi.png', _menuGroup);
	_sprNaviBG.scale.setTo(360.0, 1.0);
	_sprNaviBG.anchor.setTo(0.5, 0.5);
	
	var _stageSelectGroup = this.game.add.group(_menuGroup);
	
	var _btnNextPage = this.game.add.sprite(680, 602, 'MenuScene', 'btn_rightScrolling.png', _stageSelectGroup);
	_btnNextPage.anchor.setTo(0.5, 0.5);
	
	var _btnPrevPage = this.game.add.sprite(40, 602, 'MenuScene', 'btn_leftScrolling.png', _stageSelectGroup);
	_btnPrevPage.anchor.setTo(0.5, 0.5);
	
	var _txtWorld = this.game.add.text(135, 92, 'World1', {"font":"bold 22px Blogger Sans","fill":"#8b9dca"}, _stageSelectGroup);
	_txtWorld.anchor.setTo(0.5, 0.5);
	
	var _btnOption = this.game.add.sprite(619, 59, 'MenuScene', 'icon_option.png', _stageSelectGroup);
	_btnOption.anchor.setTo(0.5, 0.5);
	
	var _icon_world01_png = this.game.add.sprite(135, 46, 'MenuScene', 'icon_world01.png', _stageSelectGroup);
	_icon_world01_png.anchor.setTo(0.5, 0.5);
	
	var _dotLineGroup = this.game.add.group(_stageSelectGroup);
	_dotLineGroup.position.setTo(182, 47);
	
	var _dot = this.game.add.sprite(0, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot.anchor.setTo(0.5, 0.5);
	
	var _dot1 = this.game.add.sprite(20, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot1.anchor.setTo(0.5, 0.5);
	
	var _dot2 = this.game.add.sprite(40, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot2.anchor.setTo(0.5, 0.5);
	
	var _dot3 = this.game.add.sprite(60, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot3.anchor.setTo(0.5, 0.5);
	
	var _dot4 = this.game.add.sprite(80, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot4.anchor.setTo(0.5, 0.5);
	
	var _dot5 = this.game.add.sprite(100, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot5.anchor.setTo(0.5, 0.5);
	
	var _dot6 = this.game.add.sprite(120, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot6.anchor.setTo(0.5, 0.5);
	
	var _dot7 = this.game.add.sprite(140, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot7.anchor.setTo(0.5, 0.5);
	
	var _dot8 = this.game.add.sprite(160, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot8.anchor.setTo(0.5, 0.5);
	
	var _dot9 = this.game.add.sprite(180, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot9.anchor.setTo(0.5, 0.5);
	
	var _dot10 = this.game.add.sprite(200, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot10.anchor.setTo(0.5, 0.5);
	
	var _dot11 = this.game.add.sprite(220, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot11.anchor.setTo(0.5, 0.5);
	
	var _dot12 = this.game.add.sprite(240, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot12.anchor.setTo(0.5, 0.5);
	
	var _dot13 = this.game.add.sprite(260, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot13.anchor.setTo(0.5, 0.5);
	
	var _dot14 = this.game.add.sprite(280, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot14.anchor.setTo(0.5, 0.5);
	
	var _dot15 = this.game.add.sprite(300, 0, 'MenuScene', 'img_dotBlue.png', _dotLineGroup);
	_dot15.anchor.setTo(0.5, 0.5);
	
	var _worldProfile2 = new WorldUserProfile(this.game, _stageSelectGroup);
	_worldProfile2.position.setTo(491, 47);
	
	var _worldProfile1 = new WorldUserProfile(this.game, _stageSelectGroup);
	_worldProfile1.position.setTo(372, 47);
	
	var _worldProfile0 = new WorldUserProfile(this.game, _stageSelectGroup);
	_worldProfile0.position.setTo(252, 47);
	
	var _recomandJoinMsg = this.game.add.text(304, 20, 'Join the chat room.\nPlay with friends!', {"font":"bold 25px Blogger Sans","fill":"#8b9dca"}, _stageSelectGroup);
	
	var _charcterSelectGroup = this.game.add.group(_menuGroup);
	
	var _txtCharTitle = this.game.add.text(360, 60, 'CHARACTER', {"font":"bold 74px Blogger Sans","fill":"#ffffff"}, _charcterSelectGroup);
	_txtCharTitle.anchor.setTo(0.5, 0.5);
	
	var _group1 = this.game.add.group(_menuGroup);
	
	
	
	// public fields
	
	this.fBlindGroup = _blindGroup;
	this.fRestartGroup = _restartGroup;
	this.fBtnRestart = _btnRestart;
	this.fBtnShareAtRestart = _btnShareAtRestart;
	this.fBtnStageAtRestart = _btnStageAtRestart;
	this.fBtnSlowAtRestart = _btnSlowAtRestart;
	this.fTxtSlow = _txtSlow;
	this.fSprSlowIcon = _sprSlowIcon;
	this.fBtnSkipAtRestart = _btnSkipAtRestart;
	this.fBtnCharacterAtRestart = _btnCharacterAtRestart;
	this.fSprCharacterAtRestart = _sprCharacterAtRestart;
	this.fMenuGroup = _menuGroup;
	this.fBtnRestartAtMenu = _btnRestartAtMenu;
	this.fTxtRestartAtMenu = _txtRestartAtMenu;
	this.fBtnInvite = _btnInvite;
	this.fBtnSelect = _btnSelect;
	this.fSprCharacter = _sprCharacter;
	this.fSprGoToStage = _sprGoToStage;
	this.fTxtCharacter = _txtCharacter;
	this.fStageSelectGroup = _stageSelectGroup;
	this.fBtnNextPage = _btnNextPage;
	this.fBtnPrevPage = _btnPrevPage;
	this.fTxtWorld = _txtWorld;
	this.fBtnOption = _btnOption;
	this.fIcon_world01_png = _icon_world01_png;
	this.fDotLineGroup = _dotLineGroup;
	this.fWorldProfile2 = _worldProfile2;
	this.fWorldProfile1 = _worldProfile1;
	this.fWorldProfile0 = _worldProfile0;
	this.fRecomandJoinMsg = _recomandJoinMsg;
	this.fCharcterSelectGroup = _charcterSelectGroup;
	/* --- post-init-begin --- */
	
	this.curCharId = 1;//기본 아우하 인덱스 : 1;
	this.fSprGoToStage.visible = false;
	this.fCharcterSelectGroup.visible = false;
	
	this.fBtnRestartAtMenu.inputEnabled = true;
	
	// 페이지값
	this.page = 0;
	
	// 스테이지 버튼 생성 
	var flagRow = 4;
	var flagCol = 3;
	this.maxSlotNum = flagRow*flagCol;
	
	this.buttonList = [];
	
	var row, col, temp, offsetCol, offsetRow, startX, startY, index, tempWidth, tempHeight;
	
	for (index = 0; index < this.maxSlotNum; index++) {
		row = Math.floor(index / flagCol);
		col = index % flagCol;
		temp = new ButtonStage(this.game, this.fStageSelectGroup);
		tempWidth = temp.getWidth();
		tempHeight = temp.getHeight();
		offsetCol = 55;
		offsetRow = 80;
		startY = 300;
		
		temp.position.setTo((tempWidth+offsetCol) * (col + 1), startY + (row * (tempHeight+offsetRow)));
		temp.setStage(this.page * this.maxSlotNum + index + 1);
		this.buttonList.push(temp);
	}
	
	if(FBInstant) {
		function setButtonProfile() {
			for (index = 0; index < this.maxSlotNum; index++) {
                this.buttonList[index].setUserPhoto(PlayerDataManager.profileInfo.getImageKey());
			}
		}
        PlayerDataManager.profileInfo.loadProfileImage(this.game, setButtonProfile, this);
	}
	
	// 캐릭터 선택 슬롯 생성
	this.characterSlotList = [];

	for (index = 0; index < 10;++index){
		row = Math.floor(index / flagCol);
		col = index % flagCol;
		temp = new CharSelectSlot(this.game, this.fCharcterSelectGroup);
		tempWidth = temp.getWidth();
		tempHeight = temp.getHeight();	
		
		offsetCol = 20;
		offsetRow = 20;
		startX = 175;
		startY = 240;
		
		temp.position.setTo(startX + (tempWidth+offsetCol) * col, startY + (row * (tempHeight+offsetRow)));
		temp.init(index);
		this.characterSlotList.push(temp);
	}
	
	// 실패 결과창 버튼 작업.
	leaderboard.addBtn("restartScene", {id:"stz-btnRestartArea", btn:this.fBtnRestart});
	leaderboard.addBtn("restartScene", {id:"stz-btnShareArea", btn:this.fBtnShareAtRestart});
	leaderboard.addBtn("restartScene", {id:"stz-btnStageArea", btn:this.fBtnStageAtRestart});
	leaderboard.addBtn("restartScene", {id:"stz-btnCharacterArea", btn:this.fBtnCharacterAtRestart});
	leaderboard.addBtn("restartScene", {id:"stz-btnSlowArea", btn:this.fBtnSlowAtRestart});
	leaderboard.addBtn("restartScene", {id:"stz-btnSkipArea", btn:this.fBtnSkipAtRestart});

	leaderboard.onClickStageSelect = function () {
		this.showStageSelect();
	}.bind(this);

	leaderboard.onClickShare = function () {
		//todo : share기능 추가.
	}.bind(this);

	leaderboard.onClickCharacterSelect = function () {
		this.showCharacterSelect();
	}.bind(this);

	leaderboard.onClickSlow = function () {
		this.popupManager.adPopup.showPopup(EAdPopupType.slow);
	}.bind(this);

	leaderboard.onClickSkip = function () {
		this.popupManager.adPopup.showPopup(EAdPopupType.skip);
	}.bind(this);
	
	// 페이지 이동 버튼 생성
	// 이미지 변경으로 hitarea 생성.
	
	this.prevHitArea = this.game.add.graphics(0, 0);
	this.fMenuGroup.addChild(this.prevHitArea);

	this.prevHitArea.beginFill(0x000000);
	this.prevHitArea.alpha = 0;
	this.prevHitArea.drawRect(this.fBtnPrevPage.position.x-this.fBtnPrevPage.width*0.5, this.fBtnPrevPage.position.y-this.fBtnPrevPage.height*0.5
			, this.fBtnPrevPage.width, this.fBtnPrevPage.height);
	
	this.prevHitArea.events.onInputUp.add(function() {
		window.sounds.sound('sfx_button').play();
		if (this.page === 0) {
			return;
		}
		this.page--;
		this.updateBtnStage();
		this.updateBtnPage();
	}, this);
	
	this.nextHitArea = this.game.add.graphics(0, 0);
	this.fMenuGroup.addChild(this.nextHitArea);
	
	this.nextHitArea.beginFill(0x000000);
	this.nextHitArea.alpha = 0;
	this.nextHitArea.drawRect(this.fBtnNextPage.position.x-this.fBtnNextPage.width*0.5, this.fBtnNextPage.position.y-this.fBtnNextPage.height*0.5
			, this.fBtnNextPage.width, this.fBtnNextPage.height);
	
	this.nextHitArea.events.onInputUp.add(function() {
		window.sounds.sound('sfx_button').play();
		this.page++;
		this.updateBtnStage();
		this.updateBtnPage();
	}, this);
	
	
	this.updateBtnPage();
	
	this.fBlind = this.game.add.graphics(0, 0);
	this.fBlind.beginFill(0x000000);
	this.fBlind.drawRect(-1 * this.game.world.width, -1 * this.game.world.height, 2 * this.game.world.width, 2 * this.game.world.height);
	this.fBlind.alpha = 0.8;
	this.fBlind.inputEnabled= true;
	this.fBlindGroup.add(this.fBlind);
	
	//create world userProfile pool
	// this.worldProfilePool = [];

	this.game.cache.addNinePatch("blueBar", "MenuScene", "img_blueBr.png", 1, 1, 2, 2);
	var blueBar = new Phaser.NinePatchImage(this.game, 560, 25, "blueBar");
	this.fStageSelectGroup.add(blueBar);
	blueBar.targetWidth = 6;
	blueBar.targetHeight = 70;
	
	//set button callback
	this.fBtnSelect.inputEnabled = true;
	this.fBtnSelect.events.onInputUp.add(function() {
		window.sounds.sound('sfx_button').play();
		var isShowStageSelect = !this.fStageSelectGroup.visible;
		if (isShowStageSelect) this.showStageSelect();
		else this.showCharacterSelect();
	}, this);
	
	//popup 추가.
	this.popupManager = new PopupManager(this.game, this);

	this.fBtnOption.inputEnabled = true;
	this.fBtnOption.events.onInputUp.add(function() {
		window.sounds.sound('sfx_button').play();
		this.showOptionPopAddProcess(false);
		this.popupManager.optionPopup.showPopup();
	}, this);
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var MenuScene_proto = Object.create(Phaser.Group.prototype);
MenuScene.prototype = MenuScene_proto;
MenuScene.prototype.constructor = MenuScene;

/* --- end generated code --- */
// -- user code here --

MenuScene.EMenuType = {
	LIST: 0, 
	RESTART: 1
};

MenuScene.prototype.updateBtnStage = function() {
	for (var index = 0; index < this.maxSlotNum; index++) {
		var currentButton = this.buttonList[index];
		currentButton.setStage(this.page * this.maxSlotNum + index + 1);
		
		if (currentButton.stage <= DinoRunz.InGame.MAPS.length) {
			currentButton.visible = true;
		} else {
			currentButton.visible = false;
		}

		if (currentButton.stage === DinoRunz.Storage.UserData.lastClearedStage) {
			currentButton.fBtnStage.tint = 0xffff00;	
		} else {
			currentButton.fBtnStage.tint = 0xffffff;
		}
	}
};

MenuScene.prototype.updateBtnPage = function() {
	if (this.page === 0) {
		this.prevHitArea.inputEnabled = false;
	} else {
		this.prevHitArea.inputEnabled = true;
	}
	
	if (DinoRunz.InGame.MAPS.length <= (this.page + 1) * this.maxSlotNum) {
		this.nextHitArea.inputEnabled = false;
	} else {
		this.nextHitArea.inputEnabled = true;
	}
};

MenuScene.prototype.getButtonByStage = function(inStage) {
	for (var i = 0; i < this.buttonList.length; i++) {
		if (this.buttonList[i].stage === inStage) {
			return this.buttonList[i];
		}
	}
	return null;
};

MenuScene.prototype.setCharacterIcon = function(charId) {
	this.curCharId = charId;
	var textureKey = "auhaSheet" + charId;
	this.fSprCharacter.loadTexture(textureKey, null, false);
	this.fSprCharacterAtRestart.loadTexture(textureKey, 8);
};

MenuScene.prototype.showStageSelect = function() {
	this.fMenuGroup.visible = true;
	this.fRestartGroup.visible = false;
	this.fStageSelectGroup.visible = true;
	this.fCharcterSelectGroup.visible = false;
	this.fSprCharacter.visible = true;
	this.fSprGoToStage.visible = false;
	
	var curState = this.game.state.getCurrentState(); 
	curState.path.tiles.visible = false;
	curState.player.alpha = 0;
	
	this.fTxtCharacter.text = "CHARACTER";
};

MenuScene.prototype.showCharacterSelect = function(prevScene) {
	this.fMenuGroup.visible = true;
	this.fRestartGroup.visible = false;
	this.fStageSelectGroup.visible = false;
	this.fCharcterSelectGroup.visible = true;
	this.fSprCharacter.visible = false;
	this.fSprGoToStage.visible = true;
	
	this.fTxtCharacter.text = "STAGE";

	this.updateCharacterSlots();
	
	var charId = DinoRunz.Storage.UserData.lastCharacterId;
	this.characterSlotList[charId].selectSignal.dispatch();
};

MenuScene.prototype.updateCharacterSlots = function() {
	var i, length = this.characterSlotList.length;
	for(i=0;i<length;++i){
		this.characterSlotList[i].checkState();
	}

	this.popupManager.getDinoPopup.showPopup();
};

MenuScene.prototype.showRestart = function() {
	this.fMenuGroup.visible = false;
	this.fRestartGroup.visible = true;
	this.fRestartGroup.ignoreChildInput = false;
	
	var popup = this.popupManager.adPopup;
	if(DinoRunz.InGame.overCount%DinoRunz.GameConfig.showSkipPopCount===0) {
		popup.showPopup(EAdPopupType.skip);
	}
	else if(DinoRunz.InGame.overCount%DinoRunz.GameConfig.showSlowPopCount===0) {
		popup.showPopup(EAdPopupType.slow);
	}
	else {
		leaderboard.openLeaderboard(ELeaderboardType.FRIEND_LIST
				, this.game.canvas.style, "restartScene");
	}
	
	//ad
	var curState = this.game.state.getCurrentState();
	curState.interstitialRestartShowAd();
};

MenuScene.prototype.openMenu = function(inCurrentStage, inMenuType) {
	// window.sounds.allStop();
	var lobbySound = window.sounds.sound("bgm_lobby");
	if(!lobbySound.isPlaying) lobbySound.play("", 0, DinoRunz.InGame.isMusic, true);
	
	var currentIndex = inCurrentStage || 1;
	
	if (DinoRunz.Storage.UserData.lastClearedStage < currentIndex) {
		DinoRunz.Storage.UserData.lastClearedStage = currentIndex;
	}
	
	// setting menuGroup
	this.page = Math.floor((DinoRunz.Storage.UserData.lastClearedStage - 1) / this.maxSlotNum);
	
	

	this.fBtnInvite.inputEnabled = true;
	this.fBtnInvite.events.onInputUp.removeAll();
	this.fBtnInvite.events.onInputUp.add(function() {
		window.sounds.sound('sfx_button').play();
		DinoRunz.InGame.STAGE_SETTING.isBgImage = !DinoRunz.InGame.STAGE_SETTING.isBgImage;
	}, this);
	
	var stageNum = currentIndex;
	this.fTxtRestartAtMenu.text = "STAGE " + stageNum;

	leaderboard.onClickReplayGame = null;
	leaderboard.onClickReplayGame = function() {
		if (this.game.state.getCurrentState()._gameMode === DinoRunz.InGame.EGameMode.EDIT) {
			this.game.state.restart();
			this.closeMenu();
			return;
		} 
		this.game.state.getCurrentState().newGame(currentIndex);
	}.bind(this);
	
	this.fBtnRestartAtMenu.events.onInputUp.removeAll();
	this.fBtnRestartAtMenu.events.onInputUp.addOnce(function() {
		window.sounds.sound('sfx_button').play();
		if (this.game.state.getCurrentState()._gameMode === DinoRunz.InGame.EGameMode.EDIT) {
			this.game.state.restart();
			this.closeMenu();
			return;
		} 
		this.game.state.getCurrentState().newGame(currentIndex);
	}, this);
	
	if (this.game.state.getCurrentState()._gameMode === DinoRunz.InGame.EGameMode.EDIT) {
		this.fTxtRestartAtMenu.text = "Edit New Map";
	}

	this.setWorldProfiles();
	
	// setting restartGroup
	this.fBtnRestart.events.onInputUp.removeAll();
	this.fBtnRestart.events.onInputUp.addOnce(function() {
		this.game.state.getCurrentState().newGame(currentIndex);
	}, this);
	
	DinoRunz.Storage.setUserData(/*DinoRunz.Storage.UserData.lastClearedStage, DinoRunz.Storage.UserData.jewelCountList*/).then(function() {
		this.visible = true;
	}.bind(this)).catch(function() {
		this.visible = true;
	}.bind(this));
	
	this.updateBtnPage();
	this.updateBtnStage();

	this.setCharacterIcon(DinoRunz.Storage.UserData.lastCharacterId);
	
	if(inMenuType !== MenuScene.EMenuType.RESTART){
		this.showStageSelect();
	}
	else {
		this.showRestart();
	}
};

MenuScene.prototype.closeMenu = function() {
	this.visible = false;
};

MenuScene.prototype.setWorldProfiles = function() {
	var i, contextFriendsList = PlayerDataManager.getContextFriends();
	var length = contextFriendsList.length;
	var myStage = DinoRunz.Storage.UserData.lastClearedStage;
	var frinedProfile = null;
	var userName = PlayerDataManager.profileInfo.getName();
	var upper = null, lower = null;

	var dots = this.fDotLineGroup.getAll("exists", true);
	
	for (i = 0 ; i < dots.length ; ++i) {
		dots[i].visible = true;
	}
	
	this.fRecomandJoinMsg.visible = false;
	
	switch(length) {
	case 0:
	case 1:
		this.fWorldProfile0.visible = true;
		this.fWorldProfile1.visible = false;
		this.fWorldProfile2.visible = false;

		this.fWorldProfile0.setProfile(myStage, PlayerDataManager.profileInfo); 
		
		for (i = 3 ; i < dots.length ; ++i) {
			dots[i].visible = false;
		}
		
		this.fRecomandJoinMsg.visible = true;
		break;
	default:
		if(myStage >= contextFriendsList[0].bestStage) {
			this.fWorldProfile0.visible = true;
			this.fWorldProfile1.visible = false;
			this.fWorldProfile2.visible = true;
			
			for(i = 0 ; i < length ; ++i){
				if(myStage > contextFriendsList[i].bestStage){
					lower = contextFriendsList[i];
					break;
				}
			}
			
			this.fWorldProfile0.setProfile(lower.bestStage, lower.profileInfo);
			this.fWorldProfile2.setProfile(myStage, PlayerDataManager.profileInfo);
		} 
		else if(myStage <= contextFriendsList[length-1].bestStage) {
			this.fWorldProfile0.visible = true;
			this.fWorldProfile1.visible = false;
			this.fWorldProfile2.visible = true;
			
			for(i = length-1 ; i >= 0 ; --i) {
				if(myStage < contextFriendsList[i].bestStage){
					upper = contextFriendsList[i];
					break;
				}
			}
			
			this.fWorldProfile0.setProfile(myStage, PlayerDataManager.profileInfo);
			this.fWorldProfile2.setProfile(upper.bestStage, upper.profileInfo);
		} 
		else {
			this.fWorldProfile0.visible = true;
			this.fWorldProfile1.visible = true;
			this.fWorldProfile2.visible = true;
			
			for(i = 0 ; i < length ; ++i){
				if(myStage > contextFriendsList[i].bestStage){
					lower = contextFriendsList[i];
					break;
				}
			}
			
			for(i = length-1 ; i >= 0 ; --i) {
				if(myStage < contextFriendsList[i].bestStage){
					upper = contextFriendsList[i];
					break;
				}
			}
			
			this.fWorldProfile0.setProfile(lower.bestStage, lower.profileInfo);
			this.fWorldProfile1.setProfile(myStage, PlayerDataManager.profileInfo);
			this.fWorldProfile2.setProfile(upper.bestStage, upper.profileInfo);
		}
		break;
	}

	
};

MenuScene.prototype.showOptionPopAddProcess = function(isOn) {
	this.fBtnPrevPage.visible = isOn;
	this.fBtnNextPage.visible = isOn;
	
	if(isOn) this.fSprCharacter.animations.play("idle", 20);
	else this.fSprCharacter.animations.stop();
};