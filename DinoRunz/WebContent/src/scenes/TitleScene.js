
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * TitleScene.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function TitleScene(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	this.game.add.sprite(0, 0, 'titleBG_0', null, this);
	
	var _moveTitleBG = this.game.add.sprite(360, 280, 'titleBG_1', null, this);
	_moveTitleBG.anchor.setTo(0.5, 0.5);
	
	this.game.add.sprite(0, 0, 'titleBG_2', null, this);
	
	this.game.add.sprite(0, 323, 'titleRoad', null, this);
	
	var _sprTitle = this.game.add.sprite(0, -47, 'titleTitleImg', null, this);
	
	var _btnPlay = this.game.add.sprite(360, 880, 'titleAtlas', 'btn_play.png', this);
	_btnPlay.anchor.setTo(0.5, 0.5);
	
	var _userProfileGroup = this.game.add.group(this);
	
	var _profilesGroup = this.game.add.group(_userProfileGroup);
	
	var _group3 = new TitleUserProfile(this.game, _profilesGroup);
	_group3.position.setTo(535, 1210);
	
	var _group2 = new TitleUserProfile(this.game, _profilesGroup);
	_group2.position.setTo(302, 1210);
	
	var _group1 = new TitleUserProfile(this.game, _profilesGroup);
	_group1.position.setTo(63, 1210);
	
	var _img_titleUserInfoAreaLine_png = this.game.add.sprite(472, 1210, 'titleAtlas', 'img_titleUserInfoAreaLine.png', _userProfileGroup);
	_img_titleUserInfoAreaLine_png.anchor.setTo(0.5, 0.5);
	
	var _img_titleUserInfoAreaLine_png1 = this.game.add.sprite(241, 1210, 'titleAtlas', 'img_titleUserInfoAreaLine.png', _userProfileGroup);
	_img_titleUserInfoAreaLine_png1.anchor.setTo(0.5, 0.5);
	
	var _gemGroup = this.game.add.group(this);
	_gemGroup.position.setTo(396, 514);
	_gemGroup.angle = -13.4;
	
	var _img_gem01_png = this.game.add.sprite(0, 0, 'titleAtlas', 'img_gem01.png', _gemGroup);
	_img_gem01_png.anchor.setTo(0.5, 0.5);
	
	var _img_gem01_png1 = this.game.add.sprite(170, 0, 'titleAtlas', 'img_gem01.png', _gemGroup);
	_img_gem01_png1.anchor.setTo(0.5, 0.5);
	
	var _img_gem01_png2 = this.game.add.sprite(340, 0, 'titleAtlas', 'img_gem01.png', _gemGroup);
	_img_gem01_png2.anchor.setTo(0.5, 0.5);
	
	var _img_gem01_png3 = this.game.add.sprite(510, 0, 'titleAtlas', 'img_gem01.png', _gemGroup);
	_img_gem01_png3.anchor.setTo(0.5, 0.5);
	
	var _titleDinoSpriteSheet = this.game.add.sprite(28, 429, 'titleDinoSpriteSheet', 0, this);
	var _titleDinoSpriteSheet_walk = _titleDinoSpriteSheet.animations.add('walk', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], 15, true);
	_titleDinoSpriteSheet_walk.play();
	
	var _loading = this.game.add.sprite(0, 0, 'loading', null, this);

	// public fields
	
	this.fMoveTitleBG = _moveTitleBG;
	this.fSprTitle = _sprTitle;
	this.fBtnPlay = _btnPlay;
	this.fUserProfileGroup = _userProfileGroup;
	this.fProfilesGroup = _profilesGroup;
	this.fGemGroup = _gemGroup;
	this.fLoading = _loading;
	/* --- post-init-begin --- */
	this.isLoadResComplete = false;

	this.game.add.tween(this.fSprTitle.position).to({y:-57}, 1000, Phaser.Easing.Linear.None, true, 0, -1, true);
	this.game.add.tween(this.fBtnPlay.position).to({y:870}, 1500, Phaser.Easing.Linear.None, true, 0, -1, true);
	
	window.sounds.sound('bgm_lobby').play("", 0, DinoRunz.InGame.isMusic, true);
	
	this.fBtnPlay.inputEnabled = true;
	this.fBtnPlay.events.onInputUp.addOnce(function () {
		window.sounds.sound('sfx_button').play();
		this.game.load.pack("ingame", "assets/assets-pack.json");
		this.game.load.start();
		this.game.load.onLoadComplete.addOnce(function() {
			// this.game.state.start("InGame", true, false, DinoRunz.InGame.EGameMode.RUN, DinoRunz.Storage.UserData.lastClearedStage);
			// window.sounds.createSound(this.game);
			// this.destroy();
			this.isLoadResComplete = true;
		}, this);
		
		this.fLoading.visible = true;
	}, this);
	
	this.game.add.tween(this.fGemGroup.position).to({x:223, y:556}, 500, Phaser.Easing.Linear.None, true, 0, -1, false);
	
	this.game.cache.addNinePatch("titleLongBtn", "titleAtlas", "img_titleBlueSkybtn.png", 25, 25, 0, 0);
	this.fBtnLongInvite = new Phaser.NinePatchImage(this.game, 360, 1210, "titleLongBtn");
	this.fBtnLongInvite.targetWidth = 624;
	this.fBtnLongInvite.anchor.setTo(0.5, 0.5);
	this.fBtnLongInvite.UpdateImageSizes();
	
	this.fBtnLongInvite.inputEnabled = true;
	this.fBtnLongInvite.events.onInputUp.add(function() {
		window.sounds.sound('sfx_button').play();
		changeContext.call(this);
	}, this);
	
	this.fTxtLongBtn = this.game.add.text(-150, 0, "Join the chat room\nand play with your friend!", {"font":"bold 24px Blogger Sans","fill":"#1a8aa8", "align":"center"});
	this.fTxtLongBtn.anchor.setTo(0.5);
	var sprArrow = this.game.add.sprite(10, 0, "titleAtlas", "img_titleArrowToInvite.png");
	sprArrow.anchor.setTo(0.5);
	var sprIconInvite = this.game.add.sprite(50, 0, "titleAtlas", "icon_titleinviteFreinds.png");
	sprIconInvite.anchor.setTo(0.5);
	
	this.fTxtLongBtnTitle = this.game.add.text(180, 0, "INVITE FRIENDS", {"font":"bold 28px Blogger Sans","fill":"#1a8aa8"})
	this.fTxtLongBtnTitle.anchor.setTo(0.5);
	
	this.add(this.fBtnLongInvite);
	this.fBtnLongInvite.addChild(this.fTxtLongBtn);
	this.fBtnLongInvite.addChild(sprArrow);
	this.fBtnLongInvite.addChild(sprIconInvite);
	this.fBtnLongInvite.addChild(this.fTxtLongBtnTitle);
	
	this.game.cache.addNinePatch("titleshortBtn", "titleAtlas", "img_titleSmallBtn.png", 20, 20, 0, 0);
	this.fBtnShortInvite = new Phaser.NinePatchImage(this.game, 570, 1110, "titleshortBtn");
	this.fBtnShortInvite.targetWidth = 262;
	this.fBtnShortInvite.anchor.setTo(0.5);
	this.fBtnShortInvite.UpdateImageSizes();
	
	this.fBtnShortInvite.inputEnabled = true;
	this.fBtnShortInvite.events.onInputUp.add(function() {
		window.sounds.sound('sfx_button').play();
		changeContext.call(this);
	}, this);
	this.fUserProfileGroup.add(this.fBtnShortInvite);

	function changeContext() {
		FbManager.inviteFriend(function(){
			this.game.state.restart(true, false);
			PlayerData.saveData.setUserData();
		}.bind(this), null, this);
	}
	
	var sprIconInviteShort = this.game.add.sprite(-95, -5, "titleAtlas", "icon_titleinviteFreinds.png");
	sprIconInviteShort.anchor.setTo(0.5);
	sprIconInviteShort.scale.setTo(0.8);
	
	this.fTxtInviteShort = this.game.add.text(25, 0, "INVITE FRIENDS", {"font":"bold 28px Blogger Sans","fill":"#1a8aa8"});
	this.fTxtInviteShort.anchor.setTo(0.5);

	this.fBtnShortInvite.addChild(sprIconInviteShort);
	this.fBtnShortInvite.addChild(this.fTxtInviteShort);
	
	this.fLoading.visible = false;
	this.fBtnLongInvite.visible = false;
	this.fBtnShortInvite.visible = false;
	this.fUserProfileGroup.visible = false;
	this.fBtnPlay.visible = false;
	
	this.isSetProfiles = false;

	this.prevAngle = 0;
	this.moveBGTween = null;
	this.moveBG();

	this.addChildAt(this.fLoading, this.children.length - 1);//depth 정리.
	this.fLoading.inputEnabled = true;
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var TitleScene_proto = Object.create(Phaser.Group.prototype);
TitleScene.prototype = TitleScene_proto;
TitleScene.prototype.constructor = TitleScene;

/* --- end generated code --- */
// -- user code here --

TitleScene.prototype.setUserProfiles = function(friendsList) {
	this.isSetProfiles = true;

	if(friendsList.length === 0) {
		this.fBtnPlay.visible = true;
		this.fBtnLongInvite.visible = true;
		return;
	}

	var titleProfiles = this.fProfilesGroup.getAll("exists", true);

	var i, length = (friendsList.length>3) ? 3 : friendsList.length; 
	var profileData = [];

	for(i = 0 ;  i < length ; ++i) {
		profileData.push({key:friendsList[i].profileInfo.getImageKey(), url:friendsList[i].profileInfo.getPhotoUrl()})
	}

	StzUtil.loadImagesFromURL(this.game, profileData, function() {
		this.fBtnPlay.visible = true;
		this.fUserProfileGroup.visible = true;
		this.fBtnShortInvite.visible = true;

		for(i = 0 ; i < length ; ++i) {
			titleProfiles[i].visible = true;
			titleProfiles[i].setProfile(friendsList[i].profileInfo.getImageKey(), friendsList[i].profileInfo.getName(), friendsList[i].bestStage);
		}
	}, this);
};

TitleScene.prototype.update = function () {
	if(!DinoRunz.isLoadNeedData) return;
	
	if(!this.isSetProfiles) this.setUserProfiles(PlayerDataManager.getContextFriends());

	if(!this.isLoadResComplete) return;

	this.game.state.start("InGame", true, false, DinoRunz.InGame.EGameMode.RUN, DinoRunz.Storage.UserData.lastClearedStage);
	window.sounds.createSound(this.game);
	this.destroy();
};

TitleScene.prototype.moveBG = function() {
	var isAgain = true;
	var degree = 0;
	while(isAgain) {
		degree = this.game.rnd.integerInRange(0, 360);
		if(this.prevAngle !== 0) {
			var minus = (this.prevAngle - degree) * (this.prevAngle - degree); 
			isAgain = (minus < 90 * 90);

			if(!isAgain) {
				this.prevAngle = degree;
			}
		}
		else {
			this.prevAngle = degree;
			isAgain = false;
		}
	}
	var radians = degree * Math.PI / 180;

	var dist = 50;

	var posX = dist * Math.cos(radians) + this.fMoveTitleBG.position.x;
	var posY = dist * Math.sin(radians) + this.fMoveTitleBG.position.y;

	if (posX < 360 - 128) posX = 360 - 128;
	else if (posX > 360 + 128) posX = 360 + 128;

	if (posY < 280 - 128) posY = 280 - 128;
	else if (posY > 280 + 128) posY = 280 + 128;


	this.moveBGTween = this.game.add.tween(this.fMoveTitleBG).to({x:posX, y:posY}, 2500, Phaser.Easing.Linear.None, true);
	this.moveBGTween.onComplete.addOnce(function() {
		this.game.tweens.remove(this.moveBGTween)
		this.moveBG();
	}, this);
};