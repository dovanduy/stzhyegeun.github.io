
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * DinoDeath.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function DinoDeath(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _ghost = this.game.add.sprite(50, -51, 'dinoDeath', 0, this);
	_ghost.anchor.setTo(0.5, 0.5);
	_ghost.animations.add('ghost', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 25, false);
	
	var _dinoSkeleton = this.game.add.sprite(0, 0, 'dinoSkeleton', 0, this);
	_dinoSkeleton.anchor.setTo(0.5, 0.5);
	_dinoSkeleton.animations.add('skeleton', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], 32, false);
	
	
	
	// public fields
	
	this.fGhost = _ghost;
	this.fDinoSkeleton = _dinoSkeleton;
	/* --- post-init-begin --- */
	var animGhost = this.fGhost.animations.getAnimation("ghost");
	animGhost.onComplete.add(function() {
		
		var curState = this.game.state.getCurrentState();
		var endTween = this.game.add.tween(curState.fInGameGroup.scale);
		var endGhostTween = this.game.add.tween(this.scale);
		
		endTween.to({x:DinoRunz.GameConfig.end_scale, y:DinoRunz.GameConfig.end_scale}, 500, Phaser.Easing.Linear.None, true);
		endTween.onUpdateCallback(function(inParam) {
		    curState.path.setDeadViewScale(inParam.target.x);
		}, this);
		
		endGhostTween.to({x:DinoRunz.GameConfig.end_scale, y:DinoRunz.GameConfig.end_scale}, 500, Phaser.Easing.Linear.None, true);
		endGhostTween.onComplete.addOnce(function() {
			this.game.state.getCurrentState().menuScene.openMenu(curState.currentStage, MenuScene.EMenuType.RESTART);
			this.hideDeathEffect();	
		}, this);
	}, this);

	// var animSkeleton = this.fDinoSkeleton.animations.getAnimation("skeleton");
	// animSkeleton.onComplete.add(function () {
	// 	this.fGhost.visible = true;
	// 	this.fGhost.animations.play("ghost", 25);
	// }, this);
	
	this.visible = false;
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var DinoDeath_proto = Object.create(Phaser.Group.prototype);
DinoDeath.prototype = DinoDeath_proto;
DinoDeath.prototype.constructor = DinoDeath;

/* --- end generated code --- */
// -- user code here --


DinoDeath.prototype.showDeathEffect = function (inShowTime) {
	this.visible = true;
	this.fGhost.visible = false;
	this.scale.setTo(1);
	this.fDinoSkeleton.animations.play("skeleton", 32);

	var showFrame = 13;
	setTimeout(function () {
		this.fGhost.visible = true;
		this.fGhost.animations.play("ghost", 27);
	}.bind(this), inShowTime * showFrame);
};

DinoDeath.prototype.hideDeathEffect = function () {
	this.visible = false;
};