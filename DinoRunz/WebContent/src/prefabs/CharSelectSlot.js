
// -- user code here --
var ESlotLockType = {
	none: 1,
	level: 2,
	video: 3,
	share: 4,
	gift: 99
};


/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * CharSelectSlot.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function CharSelectSlot(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _slotBG = this.game.add.sprite(0, 0, 'CharacterSelect', 'img_whiteSpace.png', this);
	_slotBG.scale.setTo(2.0, 2.0);
	_slotBG.anchor.setTo(0.5, 0.5);
	
	var _btnDisable = this.game.add.sprite(0, 60, 'CharacterSelect', 'btn_disableBtnGray.png', this);
	_btnDisable.scale.setTo(2.0, 2.0);
	_btnDisable.anchor.setTo(0.5, 0.5);
	
	var _sprCharacter = this.game.add.sprite(0, -35, 'auhaSheet1', 5, this);
	_sprCharacter.scale.setTo(1.8, 1.8);
	_sprCharacter.anchor.setTo(0.5, 0.5);
	
	var _txtCondition = this.game.add.text(0, 59, 'txtDisable', {"font":"bold 20px Blogger Sans","fill":"#345d76"}, this);
	_txtCondition.anchor.setTo(0.5, 0.5);
	
	var _sprIcon = this.game.add.sprite(-35, 55, 'CharacterSelect', 'icon_adLock.png', this);
	_sprIcon.scale.setTo(2.0, 2.0);
	_sprIcon.anchor.setTo(0.5, 0.5);
	
	var _sprSelected = this.game.add.sprite(0, 0, 'CharacterSelect', 'img_select.png', this);
	_sprSelected.scale.setTo(2.0, 2.0);
	_sprSelected.anchor.setTo(0.5, 0.5);
	
	var _sprUnselected = this.game.add.sprite(0, 49, 'CharacterSelect', 'img_nonSelect.png', this);
	_sprUnselected.scale.setTo(2.0, 2.0);
	_sprUnselected.anchor.setTo(0.5, 0.5);
	
	
	
	// public fields
	
	this.fSlotBG = _slotBG;
	this.fBtnDisable = _btnDisable;
	this.fSprCharacter = _sprCharacter;
	this.fTxtCondition = _txtCondition;
	this.fSprIcon = _sprIcon;
	this.fSprSelected = _sprSelected;
	this.fSprUnselected = _sprUnselected;
	/* --- post-init-begin --- */
	
	this.charId = -1;//character index
	this.isLock = true;
	
	this.selectSignal.add(this.selectSlots, this);
	
	this.fSlotBG.inputEnabled = true;
	this.fSlotBG.events.onInputUp.add(this.selectCharacter, this);
	
	this.fBtnDisable.inputEnabled = true;
	this.fBtnDisable.events.onInputUp.add(this.btnDisableCallback, this);
	
	this.fSprSelected.visible = false;
	this.fSprUnselected.visible = false;
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var CharSelectSlot_proto = Object.create(Phaser.Group.prototype);
CharSelectSlot.prototype = CharSelectSlot_proto;
CharSelectSlot.prototype.constructor = CharSelectSlot;

/* --- end generated code --- */
// -- user code here --
CharSelectSlot.prototype.selectSignal = new Phaser.Signal();

CharSelectSlot.prototype.getWidth = function() {
	return this.fSlotBG.width;
};

CharSelectSlot.prototype.getHeight = function() {
	return this.fSlotBG.height;
};

CharSelectSlot.prototype.setSelected = function(isSelected) {
	this.fSprSelected.visible = isSelected;
	this.fSprUnselected.visible = !isSelected;
};

CharSelectSlot.prototype.checkState = function() {
	var i, length = DinoRunz.Storage.UserData.lockDinoData.length;
	var curData;
	switch(this.lockType){
	case ESlotLockType.level:
		this.curValue = DinoRunz.Storage.UserData.lastClearedStage;
		break;
	case ESlotLockType.video:
	case ESlotLockType.share:
		for(i=0;i<length;++i){
			curData = DinoRunz.Storage.UserData.lockDinoData[i];
			if(this.charId===curData.charId){
				this.curValue = curData.curValue;
			}
		}
		break;
	}
	
	this.isLock = (this.curValue<this.lockValue);
	
	if(!this.isLock){
		this.fSlotBG.alpha = 1;
		this.fSprCharacter.alpha = 1;
		
		this.fSprIcon.visible = false;
		this.fBtnDisable.visible = false;
		this.fTxtCondition.visible = false;
		
		
	}
	else {
		this.fSlotBG.alpha = 0.7;
		this.fSprCharacter.alpha = 0.5;
	
		this.fSprIcon.visible = (this.lockType!==ESlotLockType.level);
		this.fBtnDisable.visible = true;
		this.fTxtCondition.visible = true;
	}
	
	this.setSlot();
};

CharSelectSlot.prototype.selectSlots = function() {
	if(this.isLock) return;
	
	this.setSelected((this.charId===DinoRunz.Storage.UserData.lastCharacterId));
};

CharSelectSlot.prototype.btnDisableCallback = function() {
	window.sounds.sound('sfx_button').play();
	DinoRunz.InGame.menuScene.popupManager.dinoInfoPopup.showPopup(this.charId, this.lockType);
	//todo: 초대 팝업 띄우기 적용.
	//todo: 초대, 광고 보면 유저 데이터 업데이트 기능.
};

CharSelectSlot.prototype.init = function(index) {
	var characterData = StaticManager.dino_runz_character.get(index+1);
	
	this.lockType = characterData.unlock_condition;
	this.lockValue = characterData.unlock_value;
	
	this.charId = characterData.id;
	this.fSprCharacter.loadTexture("auhaSheet"+this.charId, 8);
	
	this.setSlot();
};

CharSelectSlot.prototype.setSlot = function(){
	switch(this.lockType){
		case ESlotLockType.level://stage
			this.fSprIcon.visible = false;
			this.fTxtCondition.text = "STAGE "+this.lockValue;
			this.fTxtCondition.position.x = 0;
			break;
		case ESlotLockType.video://ad
			this.fSprIcon.visible = true;
			this.fSprIcon.loadTexture("CharacterSelect", "icon_adLock.png");
			this.fTxtCondition.text = this.curValue + "/" + this.lockValue;
			this.fTxtCondition.position.x = 23;
			break;
		case ESlotLockType.share://invite
			this.fSprIcon.visible = true;
			this.fSprIcon.loadTexture("CharacterSelect", "icon_inviteLock.png");
			this.fTxtCondition.text = this.curValue + "/" + this.lockValue;
			this.fTxtCondition.position.x = 23;
			break;
		case ESlotLockType.gift:
			/**
			 * 이미지 없음.
			 * */
			break;
	}
};

CharSelectSlot.prototype.selectCharacter = function() {
	window.sounds.sound('sfx_button').play();
	if(this.isLock)return;
	if(this.charId===DinoRunz.Storage.UserData.lastCharacterId) return;
	
	DinoRunz.Storage.UserData.lastCharacterId = this.charId;
	
	if(DinoRunz.InGame.player!==null) {
		DinoRunz.InGame.player.changeCharacter(this.charId);
	}
	
	DinoRunz.InGame.menuScene.setCharacterIcon(this.charId);
	
	this.selectSignal.dispatch();
};